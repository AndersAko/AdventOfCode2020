{"version":3,"sources":["day1/input.txt","day1/day1.js","day2/input.txt","day2/day2.js","day3/input.txt","day3/day3.js","day4/input.txt","day4/day4.js","day5/input.txt","day5/day5.js","day6/input.txt","day6/day6.js","day7/input.txt","day7/Suitcase.js","day7/day7.js","day8/input.txt","day8/day8.js","day9/input.txt","day9/day9.js","day10/input.txt","day10/day10.js","day11/input.txt","day11/day11.js","day12/input.txt","day12/day12.js","day13/input.txt","day13/day13.js","day14/input.txt","day14/day14.js","day15/input.txt","day15/day15.js","day16/input.txt","day16/day16.js","Day.js","bakgrund.jpg","App.js","reportWebVitals.js","index.js"],"names":["Day1","props","useState","solution1","setSolution1","solution2","setSolution2","useEffect","fetch","inputData","then","r","text","t","String","split","expenses","expense1","expense2","parseInt","solve1","expense3","solve2","Day2","passwords","console","log","count","word","match","exec","min","max","letter","password","lettercount","first","second","state","Day3","treecount","trees","right","down","x","rowcount","length","row","treeRow","Array","Math","floor","fill","concat","from","splice","map","trim","answer","className","value","readOnly","Day4","lines","passport","line","re","fields","f","groups","filter","every","rf","find","field","m","includes","isValid","myPassport","getSeatId","l","replaceAll","seatId","seat","toString","solve1and2","Day6","groupAnswers","groupAnswersAllYes","count1","count2","firstline","answers","Set","a","size","Suitcase","style","transform","Day7","outerBagRules","InnerBagRules","rule","reOuterBag","reInnerBag","outerbagDescr","innerBagText","innerBagMatch","innerBagNum","innerBagDescr","push","descr","num","possibleBags","listOuterBags","bag","bagsFound","outerBag","countInnerBags","innerbag","Day8","runProgram","statements","execute","statement","tokens","acc","ip","executedLines","add","has","status","result","keys","lineNo","replace","Day9","preamble","dig1","dig2","startIndex","slice","digit","part1Digit","validSequence","startingAtIndex","sum","index","start","end","seq","sequence","maxAdapter","sort","b","count3","cache","combinationsFrom","tryIndex","combinations","tryValue","i","Day11","checkConfigs","occupiedFunc","occupiedLimit","configurations","next","seats","c","occupied","stringifiedNext","JSON","stringify","seatsTaken","reduce","y","col","neighbours","p","occupiedCount","dr","dc","dist","Day12","pos","dir","val","ang","PI","cos","sin","round","abs","Day13","timestampNow","busses","departures","bus","departure","firstBus","timeStamp","oldInc","increment","Day14","maskAnd","maskSet","memory","BigInt","adr","setValue","cell","storeValue","fixedBits","floatingBits","bit","Day15","number","last","undefined","spokenTurn","Map","turn","set","lastSpoken","get","Day16","rules","fieldName","myTicket","nearbyTickets","isPossiblyValid","scanningRate","ticketNo","slot","possibleFields","includeRules","rulesPerSlot","ticket","configs","possibleConfigurations","fieldsSoFar","nextSlotIndex","slotField","some","startsWith","Day","dayComponent","top","left","states","setState","day","position","onClick","type","App","src","background","width","alt","_","ix","bottom","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6dd3470.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/input.6d176210.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day1(props) {\r\n    function solve1(expenses) {\r\n        for (let expense1 of expenses) {\r\n            for (let expense2 of expenses) {\r\n                if (parseInt(expense1) + parseInt(expense2) === 2020) {\r\n                    setSolution1(parseInt(expense1) * parseInt(expense2));\r\n                    return expenses;\r\n                }\r\n            }\r\n        }\r\n        setSolution1('Not found');\r\n        return expenses;\r\n    }\r\n    \r\n    function solve2(expenses) {\r\n        for (let expense1 of expenses) {\r\n            for (let expense2 of expenses) {\r\n                for (let expense3 of expenses) {\r\n    \r\n                    if (parseInt(expense1) + parseInt(expense2) + parseInt(expense3) === 2020) {\r\n                        setSolution2(parseInt(expense1) * parseInt(expense2) * parseInt(expense3));\r\n                        return expenses;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setSolution2('Not found');\r\n        return expenses;\r\n    }\r\n\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n\r\n    useEffect( () => {\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n')) \r\n        .then(t => solve1(t) )\r\n        .then(t => solve2(t) );\r\n    }, [solution1, solution2]);\r\n\r\n    return (\r\n        <div>\r\n            <b>Day1</b><br/>\r\n            Part 1: {solution1}\r\n            <br/>\r\n            Part 2: {solution2}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.e5c3e273.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day2(props) {\r\n    function solve1(passwords) {\r\n        console.log('Solve 1');\r\n        \r\n        let count = 0;\r\n        for (let word of passwords) {\r\n            let re = /(\\d+)-(\\d+) (\\w): (\\w+)/g\r\n            let match = re.exec(word);\r\n            //\r\n            let min = parseInt(match[1]);\r\n            let max = parseInt(match[2]);\r\n            let letter = match[3];\r\n            let password = match[4];\r\n            let lettercount = 0;\r\n            for (let char of password) {\r\n                if (char ===letter) {\r\n                    lettercount++;\r\n                }\r\n            }\r\n            if (lettercount >= min && lettercount <= max) {\r\n                count++;\r\n            } else {\r\n            }\r\n        }\r\n        setSolution1(count);\r\n        return passwords;\r\n    }\r\n    \r\n    function solve2(passwords) {\r\n        console.log('Solve 2');\r\n        \r\n        let count = 0;\r\n        for (let word of passwords) {\r\n            let re = /(\\d+)-(\\d+) (\\w): (\\w+)/g\r\n            let match = re.exec(word);\r\n            let first = parseInt(match[1]);\r\n            let second = parseInt(match[2]);\r\n            let letter = match[3];\r\n            let password = match[4];\r\n            if ( (password[first-1]===letter) !== (password[second-1]===letter)) {\r\n                count++;\r\n            }\r\n        }\r\n        setSolution2(count);\r\n        return passwords;\r\n    }\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n\r\n    useEffect( () => {\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n')) \r\n        .then(t => solve1(t) )\r\n        .then(t => solve2(t) );\r\n    }, [solution1, solution2]);\r\n    \r\n    return (\r\n        <div>\r\n            <b>Day 2</b><br/>\r\n            Part 1: {solution1}\r\n            {props.state ==='expanded' && (<><br/> </>) }\r\n            <br/>\r\n            Part 2: {solution2}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.4cd3b3be.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day3(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        function treecount(trees, right, down) {\r\n            let x = 0;\r\n            let count = 0;\r\n            for (let rowcount = 0; rowcount<trees.length; rowcount+=down) {\r\n                let row = trees[rowcount];\r\n                let treeRow = Array(row.length * Math.floor(x/row.length)).fill('_').concat(Array.from(row));\r\n                if (row[x % row.length] === '#') {\r\n                    treeRow.splice(x, 1,'X');\r\n                    count++;\r\n                } else {\r\n                    treeRow.splice(x, 1,'O');\r\n                }\r\n                // log(rowcount, treeRow.join(''));\r\n                x +=right;\r\n            }\r\n            return count;\r\n        }\r\n      \r\n        function solve1(trees) {\r\n            console.log('Solve 1');\r\n            let count = treecount(trees, 3, 1);\r\n            setSolution1(count);\r\n        }\r\n\r\n        function solve2(trees) {\r\n            console.log('Solve 2');\r\n            let answer = treecount(trees, 1, 1) * treecount(trees, 3, 1) * treecount(trees, 5, 1) *\r\n                treecount(trees, 7, 1) * treecount(trees, 1, 2);\r\n            setSolution2(answer);\r\n        }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1(t));\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve2(t) );\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 3</b><br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <textarea className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.bbcb0056.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day4(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        // function log(...message) {\r\n        //     sidePanelText = sidePanelText.concat('\\n', ...message);\r\n        //     setSidePanel(sidePanelText);\r\n        // }\r\n\r\n        function solve1(lines) {\r\n            console.log('Solve 1');\r\n            let passport = [];\r\n            let count = 0;\r\n            for(let line of lines) {\r\n                let re = /(?<fld>\\w+):(.+)/;\r\n                let fields = line.split(' ').map(f => f.match(re)?.groups[\"fld\"]).filter(f=> !!f);\r\n                // console.log('Line: ', line, 'Fields: ', fields);\r\n                if (fields && fields.length>0) {\r\n                    passport = passport.concat(fields);\r\n                } else {\r\n                    let myPassport = passport;\r\n                    let requiredFields = ['byr', 'iyr', 'eyr', 'hgt', 'hcl', 'ecl', 'pid'];\r\n                    if (requiredFields.every(f => myPassport.includes(f))) {\r\n                        count ++;\r\n                    }\r\n                    passport=[];\r\n                }\r\n            }\r\n            setSolution1(count);\r\n        }\r\n\r\n        function solve2(lines) {\r\n            console.log('Solve 2');\r\n            let passport = [];\r\n            let count = 0;\r\n            for(let line of lines) {\r\n                let re = /(?<fld>\\w+):(?<value>.+)/;\r\n                let fields = line.split(' ')\r\n                    .map(f => f.match(re)?.groups).filter(f=> f && f['fld']);\r\n                // console.log('Line: ', line, 'Fields: ', fields);\r\n                if (fields && fields.length>0) {\r\n                    passport = passport.concat(fields);\r\n                } else {\r\n                    if (isValid(passport)) {\r\n                        // console.log('OK');\r\n                        count++;\r\n                    } else {\r\n                        // console.log('Not OK');\r\n                    }\r\n                    passport=[];\r\n                }\r\n            }\r\n            setSolution2(count);\r\n\r\n            function isValid(passport) {\r\n                // console.log('Checking passport: ', passport);\r\n                let requiredFields = ['byr', 'iyr', 'eyr', 'hgt', 'hcl', 'ecl', 'pid'];\r\n                if (!requiredFields.every(rf => passport.find(f => f['fld'] && f['fld'] === rf))) {\r\n                    return false;\r\n                }\r\n                for (let field of passport) {\r\n                    let value = field['value'];\r\n                    switch (field['fld']) {\r\n                        case 'byr':\r\n                            if (value.length !== 4) return false;\r\n                            if (!parseInt(value) || parseInt(value) < 1920 || parseInt(value) > 2002) {\r\n                                return false;\r\n                            }\r\n                            break;\r\n                        case 'iyr':\r\n                            if (value.length !== 4) return false;\r\n                            if (!parseInt(value) || parseInt(value) < 2010 || parseInt(value) > 2020) {\r\n                                return false;\r\n                            }\r\n                            break;\r\n                        case 'eyr':\r\n                            if (value.length !== 4) return false;\r\n                            if (!parseInt(value) || parseInt(value) < 2020 || parseInt(value) > 2030) {\r\n                                return false;\r\n                            }\r\n                            break;\r\n                        case 'hgt':\r\n                            let m = value.match(/(\\d+)(in|cm)/);\r\n                            if (!m || !m[1] || !parseInt(m[1]) ) return false;\r\n                            if (m[2] === 'in' && (parseInt(m[1]) < 59 || parseInt(m[1]) > 76) ) return false; \r\n                            if (m[2] === 'cm' && (parseInt(m[1]) < 150 || parseInt(m[1]) > 193) ) return false; \r\n                            break;\r\n                        case 'hcl':\r\n                            if (!value.match(/#[0-9a-f]{6}/) ) return false;\r\n                            break;\r\n                        case 'ecl':\r\n                            if (value.length !== 3 || !['amb','blu','brn','gry','grn','hzl','oth'].includes(value)) return false;\r\n                            break;\r\n                        case 'pid':\r\n                            if (!value.match(/^[0-9]{9}$/) ) return false;\r\n                            break;\r\n                        case 'cid':\r\n                            break;\r\n                        default:\r\n                            console.log('Missing case', field['fld']);\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1(t));\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve2(t) );\r\n    }, []);\r\n    \r\n        return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 4</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <textarea className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.cef4c770.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day4(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        // function log(...message) {\r\n        //     sidePanelText = sidePanelText.concat('\\n', ...message);\r\n        //     setSidePanel(sidePanelText);\r\n        // }\r\n\r\n        function solve1and2(lines) {\r\n            console.log('Solve 1');\r\n\r\n            function getSeatId(l) {\r\n                return parseInt(l.replaceAll('B', '1').replaceAll('F', '0').replaceAll('R', 1).replaceAll('L', 0), 2);\r\n            }\r\n            let min = Math.min(...lines.map(getSeatId));\r\n            let max = Math.max(...lines.map(getSeatId));\r\n            setSolution1(max);\r\n            console.log('Max: ', max, 'Min', min);\r\n            for (let seatId = min; seatId< max; seatId++) {\r\n                if (!lines.map(getSeatId).includes(seatId)) {\r\n                    let seat = seatId.toString(2).replaceAll('1', 'B').replaceAll('0','F').replaceAll('1','R').replaceAll('0', 'L')\r\n                    console.log('Seat ', seatId, seat, 'is not taken');\r\n                    setSolution2(seatId);\r\n                }\r\n            }\r\n        }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1and2(t));\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 5</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <textarea className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.9651e15f.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day6(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        // function log(...message) {\r\n        //     sidePanelText = sidePanelText.concat('\\n', ...message);\r\n        //     setSidePanel(sidePanelText);\r\n        // }\r\n\r\n        function solve1and2(lines) {\r\n            console.log('Solve 1 & 2');\r\n            let count1 = 0, count2=0;\r\n            let groupAnswers; \r\n            let groupAnswersAllYes; \r\n            let firstline = true;\r\n\r\n            for (let line of lines) {\r\n                if (line !=='') {\r\n                    let answers=line.split('');\r\n                    if (firstline) {\r\n                        groupAnswers = new Set(answers);\r\n                        groupAnswersAllYes = new Set(answers);\r\n                        firstline = false;\r\n                    } else {\r\n                        // Check groupAnswersAllYes, remove any missing in answers\r\n                        groupAnswersAllYes = new Set([...groupAnswersAllYes].filter(a => answers.includes(a)));\r\n                        // Add answers to groupAnswers\r\n                        groupAnswers = new Set([...groupAnswers].concat(answers));\r\n                        // answers.forEach(answer => groupAnswers.add(answer));\r\n                    }\r\n                } else {\r\n                    console.log('Group answers:', groupAnswers, groupAnswers.size);\r\n                    count1 += groupAnswers.size\r\n                    console.log('Group yes answers:', groupAnswersAllYes, groupAnswersAllYes.size);\r\n                    count2 += groupAnswersAllYes.size\r\n                    firstline = true;\r\n                }\r\n            }   \r\n            setSolution1(count1);\r\n            setSolution2(count2);\r\n        }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1and2(t));\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 6</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <textarea className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.fc61eb78.txt\";","import './Suitcase.css'\r\n\r\nexport default function Suitcase(props) {\r\n    return (\r\n        <div className='Suitcase' >\r\n            <div className='face back' />\r\n            <div className='face bottom' />\r\n            <div className='face left' />\r\n            <div className='face right' />\r\n            <div className='face front' />\r\n            {/* <div className='fulllid' style={{transform: 'rotateX(45deg)', transformStyle: 'preserve-3d' }}> */}\r\n            <div className='fulllid' style={{transform: 'rotateX(0deg)' }}>\r\n                <div className='face lidback' />\r\n                <div className='face lidleft' />\r\n                <div className='face lidright' />\r\n                <div className='face lid' />\r\n                <div className='face lidfront' />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import inputData from './input.txt';\r\nimport React, {useState, useEffect} from 'react';\r\nimport Suitcase from './Suitcase';\r\n\r\nexport default function Day7(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        // function log(...message) {\r\n        //     sidePanelText = sidePanelText.concat('\\n', ...message);\r\n        //     setSidePanel(sidePanelText);\r\n        // }\r\n\r\n        function solve1and2(lines) {\r\n            console.log('Solve 1 & 2');\r\n            let outerBagRules = {};     // { bag:  [outerbag1, outerbag2]}\r\n            let InnerBagRules = {};     // bag: [{descr: innerbag1, num: <count>}]  \r\n           for (let rule of lines ) {\r\n                let reOuterBag = /(?<otherbag>\\w+ \\w+) bags contain (?<innerbags>.*)/; \r\n                let reInnerBag = /(?<num>\\d+) (?<innerbag>\\w+ \\w+)/; \r\n                let outerbagDescr = rule.match(reOuterBag).groups['otherbag'];\r\n                \r\n                for (let innerBagText of rule.match(reOuterBag).groups['innerbags']?.split(',')) {\r\n                    let innerBagMatch = innerBagText.match(reInnerBag);\r\n                    if (!innerBagMatch) {\r\n                        console.log(\"Innerbag description didn't match, skipped\", innerBagText);\r\n                        continue;\r\n                    }\r\n                    let innerBagNum = innerBagMatch.groups['num'];\r\n                    let innerBagDescr = innerBagMatch.groups['innerbag'];\r\n                    if (outerBagRules[innerBagDescr]) {\r\n                        outerBagRules[innerBagDescr].push(outerbagDescr);\r\n                    } else {\r\n                        outerBagRules[innerBagDescr] = [outerbagDescr];\r\n                    }\r\n                    if (InnerBagRules[outerbagDescr]) {\r\n                        InnerBagRules[outerbagDescr].push({descr: innerBagDescr, num: innerBagNum});\r\n                    } else {\r\n                        InnerBagRules[outerbagDescr] = [{descr: innerBagDescr, num: innerBagNum}];\r\n                    }\r\n                    \r\n                    // console.log(\"RULE: \" + outerbagDescr + \" contains \" + innerBagNum, innerBagDescr);\r\n                }\r\n            }\r\n            // Until no parents: Get outer bags of \"shiny gold\"; Get outer bags of these\r\n            function listOuterBags(bag) {\r\n                let bagsFound = [bag];\r\n                for (let outerBag of outerBagRules[bag]||[]) {\r\n                    bagsFound = bagsFound.concat(listOuterBags(outerBag));\r\n                } \r\n                return bagsFound;\r\n            }\r\n            let possibleBags = listOuterBags('shiny gold');\r\n            console.log (\"Possible outer bags\", possibleBags, \"reduced to\", new Set(possibleBags))\r\n            setSolution1(new Set(possibleBags).size -1);\r\n\r\n            function countInnerBags(bag) {\r\n                let count = 1; // This bag\r\n                for (let innerbag of InnerBagRules[bag]||[]) {\r\n                    count += innerbag.num * countInnerBags(innerbag.descr);\r\n                }\r\n                return count;\r\n            }\r\n            setSolution2(countInnerBags('shiny gold')-1);\r\n        }\r\n\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1and2(t));\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 7</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <div className='sidepanel' >\r\n                    <Suitcase />\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.32a515d4.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day8(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        function runProgram(statements) {\r\n            function execute(statement) {\r\n                let tokens = statement.split(' ');\r\n                switch (tokens[0]) {\r\n                    case 'acc':\r\n                        acc += parseInt(tokens[1]);\r\n                        break;\r\n                    case 'jmp':\r\n                        ip += parseInt(tokens[1]);\r\n                        return;\r\n                    case 'nop':\r\n                        break;\r\n                    default: \r\n                        console.log (\"Illegal opcode\", tokens[0], \"in line\", statement);\r\n                }\r\n                ip += 1;\r\n            }\r\n\r\n            let ip = 0, acc = 0;\r\n            let executedLines = new Set();\r\n            do {\r\n                executedLines.add(ip);\r\n                execute(statements[ip]);\r\n                if (executedLines.has(ip)) {\r\n                    console.log('Infinite loop detected in line ', ip);\r\n                    return {status: 'InfiniteLoop', acc, ip };\r\n                };\r\n            } while (ip < statements.length);\r\n            return {status: 'EndOK', acc, ip };\r\n        }\r\n\r\n        function solve1and2(lines) {\r\n            console.log('Solve 1');\r\n\r\n            let result = runProgram(lines);\r\n            setSolution1(result.acc);\r\n\r\n            for (let lineNo of lines.keys()) {\r\n                let statements = [...lines];    // Copy program\r\n                if (statements[lineNo].match(/^(nop) /)) {\r\n                    statements[lineNo] = statements[lineNo].replace('nop', 'jmp');\r\n                } else if (statements[lineNo].match(/^(jmp) /)) {\r\n                    statements[lineNo] = statements[lineNo].replace('jmp', 'nop');\r\n                }\r\n                let result = runProgram(statements);\r\n                if (result.status === 'EndOK') {\r\n                    console.log('Program termnates by modiying line ', lineNo, lines[lineNo]);\r\n                    setSolution2(result.acc);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1and2(t));\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 8</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <div className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.29d86635.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day9(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        function solve1and2(lines) {\r\n            console.log('Solve 1');\r\n            let preambleLength = 25;\r\n    \r\n            function isValid(x, preamble) {\r\n                for (let dig1 of preamble) {\r\n                    for (let dig2 of preamble) {\r\n                        if (dig1 !== dig2 && parseInt(x) === parseInt(dig1)+parseInt(dig2)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n\r\n            let startIndex = 0;\r\n            for (let digit of lines.slice(preambleLength)) {\r\n                let preamble = lines.slice(startIndex,startIndex+preambleLength);\r\n                startIndex ++;\r\n                if (!isValid(digit, preamble)) {\r\n                    console.log(digit, 'is not valid according to ', preamble);\r\n                    setSolution1(digit);\r\n                    var part1Digit = parseInt(digit);\r\n                }\r\n            }\r\n            console.log('Solve2', part1Digit);\r\n\r\n            function validSequence(startingAtIndex) {\r\n                let sum = 0;\r\n                for (let index = startingAtIndex; index<lines.length; index++) {\r\n                    sum += parseInt(lines[index]);\r\n                    if (sum === part1Digit && index !==startingAtIndex) return {start: startingAtIndex, end: index};\r\n                    if (sum > part1Digit) return false;\r\n                }\r\n                return false;\r\n            }\r\n            for (let index = 0; index<lines.length; index++) {\r\n                let seq = validSequence(index)\r\n                if (seq) {\r\n                    console.log('Valid sequence at ', index, 'to', seq['end'], '= '+lines[seq.start]+' to '+lines[seq.end] );\r\n                    let sequence = lines.slice(seq.start, seq.end+1);\r\n                    console.log(sequence, Math.min(...sequence), Math.max(...sequence));\r\n                    setSolution2(Math.min(...sequence) + Math.max(...sequence))\r\n                }\r\n            }\r\n        }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1and2(t));\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 9</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <div className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.fa8729aa.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day9(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        function solve1and2(lines) {\r\n            console.log('Solve 1');\r\n            lines.push('0');\r\n            let maxAdapter = Math.max(...lines)+3;\r\n            lines.push((maxAdapter).toString());\r\n\r\n            lines.sort((a,b) => a-b);\r\n            let count1=0, count3=0;\r\n            for (let index=1; index<lines.length; index++) {\r\n                if (lines[index]-lines[index-1] === 1) {\r\n                    count1++;\r\n                } else if (lines[index]-lines[index-1] === 3) {\r\n                    count3++;\r\n                } else {\r\n                    console.log('Gap of ', lines[index]-lines[index-1]);\r\n                }\r\n\r\n            }\r\n            console.log('Differences of 1: '+count1+', diff of 3: '+count3);\r\n            setSolution1(count1*count3);\r\n\r\n            function combinationsFrom(tryIndex) {\r\n                if (cache[tryIndex]) {return cache[tryIndex];}\r\n                console.log('CombinationsFrom ', tryIndex, lines[tryIndex]);\r\n                let combinations = 0;\r\n                let tryValue = +lines[tryIndex];\r\n                for (let i = tryIndex+1; lines[i] <= tryValue+3 && i < lines.length; i++) {\r\n                    if (i===lines.length-1) {\r\n                        return 1;\r\n                    }\r\n                    combinations += combinationsFrom(i);\r\n                }\r\n                cache[tryIndex] = combinations;\r\n                return combinations;\r\n            }\r\n            let cache = {};\r\n            let count=combinationsFrom(0);\r\n\r\n            setSolution2(count);\r\n\r\n        }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1and2(t));\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 10</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <div className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.1e915ddc.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day11(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        function solve1and2(lines) {\r\n            console.log('Solve 1');\r\n            function neighbours(row, col) {\r\n                row = +row; col = +col;\r\n                let result = [];\r\n                for (let r = row-1; r<=row+1; r++) {\r\n                    for (let c=col-1; c<=col+1; c++) {\r\n                        if (r>=0 && r<lines.length && c>=0 && c<lines[0].length && (r!==row || c!==col) ) {\r\n                            result.push({r,c});\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n            function occupiedInSight(row, col) {\r\n                row = +row; col = +col;\r\n                let occupiedCount = 0;\r\n                for (let dr = -1; dr<=+1; dr++) {\r\n                    for (let dc=-1; dc<=+1; dc++) {\r\n                        if (dr===0 && dc===0) continue;\r\n                        let occupied = false;\r\n                        let dist = 1;\r\n                        while (row+dr*dist>=0 && row+dr*dist<lines.length && col+dc*dist>=0 && col+dc*dist<lines[0].length) {\r\n                            if (seats[row+dr*dist][col+dc*dist] ==='#') {\r\n                                occupied=true;\r\n                                break;\r\n                            }\r\n                            if (seats[row+dr*dist][col+dc*dist] ==='L') break;\r\n\r\n                            dist++;\r\n                        }\r\n                        if (occupied) occupiedCount++;\r\n                    }\r\n                }\r\n                return occupiedCount;\r\n            }\r\n\r\n            function checkConfigs( occupiedFunc, occupiedLimit) {\r\n                let configurations = new Set();\r\n                while (true) {\r\n                    let next = seats.map(x => x.slice());\r\n    \r\n                    for (let r in seats) {\r\n                        for (let c in seats[r]) {\r\n                            let occupied = occupiedFunc(r,c);\r\n                            if (seats[r][c] === 'L' && occupied===0) next[r][c]='#';\r\n                            else if (seats[r][c] === '#' && occupied>=occupiedLimit) next[r][c]='L';\r\n                        }\r\n                        // console.log(next[r].join(''));\r\n                    }\r\n                    // console.log('');\r\n                    let stringifiedNext = JSON.stringify(next);\r\n                    if (configurations.has(stringifiedNext)) {\r\n                        let seatsTaken = next.reduce((count, x) => count + x.reduce( (count,y) => count + (y==='#'?1:0), 0 ),0);\r\n                        console.log('Same config seen before', seatsTaken);\r\n                        return seatsTaken;\r\n                    }\r\n                    configurations.add(stringifiedNext);\r\n                    seats = next;\r\n                }\r\n    \r\n            }\r\n\r\n            let seats = lines.map(x => Array.from(x));\r\n            let seatsTaken = checkConfigs ( (r,c) => neighbours(r,c).filter(p => seats[p.r][p.c] ==='#').length, 4)\r\n            setSolution1(seatsTaken);\r\n\r\n            seats = lines.map(x => Array.from(x));\r\n            seatsTaken = checkConfigs ( occupiedInSight, 5);\r\n            setSolution2(seatsTaken);\r\n\r\n        }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1and2(t));\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 11</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <div className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.a0a48ce0.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day12(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        function solve1(lines) {\r\n            console.log('Solve 1');\r\n            let pos = {x: 0, y:0};  // x east, y north\r\n            let dir = {x: 1, y:0};\r\n            for (let line of lines) {\r\n                let re = /(?<action>\\w)(?<val>\\d+)/;\r\n                let match = line.match(re);\r\n                if (match) console.log(match.groups['action'], match.groups['val']);\r\n                else console.log('no match on ', line)\r\n                let val = +match.groups['val'];\r\n                switch (match.groups['action']) {\r\n                    case 'N':\r\n                        pos.y += val;\r\n                        break;\r\n                    case 'S':\r\n                        pos.y -= val;\r\n                        break;\r\n                    case 'E':\r\n                        pos.x += val;\r\n                        break;\r\n                    case 'W':\r\n                        pos.x -= val;\r\n                        break;\r\n                    case 'F':\r\n                        pos.x += dir.x * val;\r\n                        pos.y += dir.y * val;\r\n                        break;\r\n                    case 'R':\r\n                        val = -val;\r\n                        // fallthrough\r\n                    case 'L':\r\n                        const toRad = (deg) => deg*Math.PI/180;\r\n                        let ang = toRad(val);\r\n                        let newDir = { \r\n                            x: dir.x*Math.cos(ang)-dir.y*Math.sin(ang),\r\n                            y: dir.x*Math.sin(ang)+dir.y*Math.cos(ang)\r\n                        }\r\n                        dir = newDir;\r\n                        break;\r\n                    default:\r\n                        console.log('Unknown action', match.groups['action']);\r\n                }\r\n                console.log('Position: ', pos, 'facing', dir);\r\n            }\r\n            setSolution1(Math.round(Math.abs(pos.x) + Math.abs(pos.y)));\r\n        }\r\n\r\n        function solve2(lines) {\r\n            console.log('Solve 2');\r\n            let pos = {x: 0, y:0};  // x east, y north\r\n            let dir = {x: 10, y:1}; // waypoint\r\n            for (let line of lines) {\r\n                let re = /(?<action>\\w)(?<val>\\d+)/;\r\n                let match = line.match(re);\r\n                if (match) console.log(match.groups['action'], match.groups['val']);\r\n                else console.log('no match on ', line)\r\n                let val = +match.groups['val'];\r\n                switch (match.groups['action']) {\r\n                    case 'N':\r\n                        dir.y += val;\r\n                        break;\r\n                    case 'S':\r\n                        dir.y -= val;\r\n                        break;\r\n                    case 'E':\r\n                        dir.x += val;\r\n                        break;\r\n                    case 'W':\r\n                        dir.x -= val;\r\n                        break;\r\n                    case 'F':\r\n                        pos.x += dir.x * val;\r\n                        pos.y += dir.y * val;\r\n                        break;\r\n                    case 'R':\r\n                        val = -val;\r\n                        // fallthrough\r\n                    case 'L':\r\n                        const toRad = (deg) => deg*Math.PI/180;\r\n                        let ang = toRad(val);\r\n                        let newDir = { \r\n                            x: dir.x*Math.cos(ang)-dir.y*Math.sin(ang),\r\n                            y: dir.x*Math.sin(ang)+dir.y*Math.cos(ang)\r\n                        }\r\n                        dir = newDir;\r\n                        break;\r\n                    default:\r\n                        console.log('Unknown action', match.groups['action']);\r\n                }\r\n                console.log('Position: '+ pos + 'waypoint'+ dir);\r\n            }\r\n            setSolution2(Math.round(Math.abs(pos.x) + Math.abs(pos.y)));\r\n        }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1(t));\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve2(t));\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 12</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <div className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.52cd62c8.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day13(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        function solve1(lines) {\r\n            console.log('Solve 1');\r\n\r\n            let timestampNow = parseInt(lines[0]);\r\n            let busses = lines[1].split(',');\r\n            let departures = [];\r\n            for (let bus of busses) {\r\n                if (bus ==='x') continue;\r\n                bus = +bus;\r\n                let departure = Math.floor(timestampNow/bus)*bus + bus;\r\n                departures.push({bus, departure});\r\n                console.log('Next bus '+bus+' leaves at '+departure);\r\n            }\r\n            let firstBus = departures.sort( (a,b) => a.departure - b.departure)[0];\r\n            setSolution1(firstBus.bus * (firstBus.departure - timestampNow));\r\n        }\r\n\r\n        function solve2(lines) {\r\n            console.log('Solve 2');\r\n            let busses = lines[1].split(',');\r\n            let timeStamp = 1;\r\n            let oldInc = 1;\r\n            while (true) {\r\n                let match = true;\r\n                let increment = 1;\r\n                for (let bus in busses) {\r\n                    if (busses[bus] === 'x') continue;\r\n                    if ( (timeStamp + +bus) % +busses[bus] !== 0) { match = false; break; }\r\n                    increment *= +busses[bus];\r\n                }\r\n                if (match) {\r\n                    console.log('Match for all busses at ', timeStamp);\r\n                    break;\r\n                }\r\n                timeStamp += increment;\r\n                if (increment !== oldInc) {\r\n                    oldInc = increment;\r\n                    console.log(timeStamp + ': Increment=' + increment);\r\n                }\r\n            }\r\n            setSolution2(timeStamp);\r\n        }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1(t));\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve2(t));\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 13</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <div className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.fa6b333b.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n/* global BigInt */\r\n\r\nexport default function Day14(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        function solve1(lines) {\r\n            console.log('Solve 1');\r\n\r\n            let memory=[];\r\n            let maskAnd, maskSet;\r\n            for (let line of lines) {\r\n                let re = /(?<cmd>mask|mem)(\\[(?<adr>\\d+)\\])? = (?<val>[\\dX]+)/;\r\n                let match = line.match(re);\r\n                let val = match?.groups['val'];\r\n\r\n                switch (match && val && match?.groups['cmd']) {\r\n                    case 'mask':\r\n                        maskAnd = val.replaceAll('1','0').replaceAll('X','1');\r\n                        maskAnd = BigInt(parseInt(maskAnd,2));\r\n                        maskSet = val.replaceAll('X','0');\r\n                        maskSet = BigInt(parseInt(maskSet,2));\r\n                        break;\r\n                    case 'mem':\r\n                        let adr = match?.groups['adr'];\r\n                        if (!adr) console.log('No address found');\r\n                        let setValue = (BigInt(parseInt(val,10)) & maskAnd) | maskSet;\r\n                        memory[adr] = setValue;\r\n                        break;\r\n                    default:\r\n                        console.log('Unknown command or value', match?.groups['cmd'], val, 'in', line);\r\n                } \r\n            }\r\n            let sum = 0n;\r\n            for (let cell in memory) {\r\n                if (cell) sum += memory[cell];\r\n            }\r\n            setSolution1(sum.toString(10));\r\n        }\r\n\r\n        function solve2(lines) {\r\n            // Store <value> in the addresses defined by fixedBits and floatingBits\r\n            function storeValue(fixedBits, floatingBits, value) {\r\n                if (!floatingBits) {\r\n                    memory[fixedBits] = value;\r\n                }\r\n                for (let bit = 1n; bit <= floatingBits; bit = bit<<1n) {\r\n                    if (floatingBits & bit) {\r\n                        storeValue(fixedBits | bit, floatingBits^bit, value);   // Clear floating bit, set for both 0 and 1 in that bit\r\n                        storeValue( (fixedBits|bit) ^bit, floatingBits^bit, value);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            console.log('Solve 2');\r\n\r\n            let memory=[];\r\n            let maskAnd, maskSet;\r\n            for (let line of lines) {\r\n                let re = /(?<cmd>mask|mem)(\\[(?<adr>\\d+)\\])? = (?<val>[\\dX]+)/;\r\n                let match = line.match(re);\r\n                let val = match?.groups['val'];\r\n\r\n                switch (match && val && match?.groups['cmd']) {\r\n                    case 'mask':\r\n                        maskAnd = val.replaceAll('1','0').replaceAll('X','1');\r\n                        maskAnd = BigInt(parseInt(maskAnd,2));\r\n                        maskSet = val.replaceAll('X','0');\r\n                        maskSet = BigInt(parseInt(maskSet,2));\r\n                        break;\r\n                    case 'mem':\r\n                        let adr = match?.groups['adr'];\r\n                        if (!adr) console.log('No address found');\r\n                        storeValue(BigInt(adr) | maskSet, maskAnd, BigInt(parseInt(val,10)));\r\n                        break;\r\n                    default:\r\n                        console.log('Unknown command or value', match?.groups['cmd'], val, 'in', line);\r\n                } \r\n            }\r\n            let sum = 0n;\r\n            for (let cell in memory) {\r\n                if (cell) sum += memory[cell];\r\n            }\r\n            setSolution2(sum.toString(10));\r\n        }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1(t));\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve2(t));\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 14</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <div className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.39c1f869.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\nexport default function Day15(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Solving...');\r\n    \r\n    useEffect( () => {\r\n        function solve1(lines) {\r\n            console.log('Solve 1');\r\n            let last=undefined;\r\n            let spokenTurn = new Map(); \r\n            let turn = 0;\r\n            for (let number of lines[0].split(',')) {\r\n                spokenTurn.set(last, turn);\r\n\r\n                number = parseInt(number,10);\r\n                last = number;\r\n                turn++;\r\n            }\r\n\r\n            let number;\r\n            while (turn < 2020) {\r\n                let lastSpoken = spokenTurn.get(last);\r\n                number = lastSpoken ? turn - lastSpoken : 0;\r\n                spokenTurn.set(last, turn);\r\n                turn ++;\r\n                console.log(turn, number, last);\r\n                last = number;\r\n            }\r\n            setSolution1(number);\r\n        }\r\n\r\n        function solve2(lines) {\r\n            console.log('Solve 2');\r\n            let last=undefined;\r\n            let spokenTurn = new Map(); \r\n            let turn = 0;\r\n            for (let number of lines[0].split(',')) {\r\n                spokenTurn.set(last, turn);\r\n\r\n                number = parseInt(number,10);\r\n                last = number;\r\n                turn++;\r\n            }\r\n\r\n            let number;\r\n            while (turn < 30000000) {\r\n                let lastSpoken = spokenTurn.get(last);\r\n                number = lastSpoken ? turn - lastSpoken : 0;\r\n                spokenTurn.set(last, turn);\r\n                turn ++;\r\n                last = number;\r\n                if (turn % 1000000 ===0) {\r\n                    console.log(turn, number, spokenTurn.size);\r\n                    setSolution2('Solving...'+turn/300000+'%');\r\n                }\r\n            }\r\n            setSolution2(number);\r\n         }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1(t));\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve2(t));\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 15</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <div className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.8fad685e.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\nexport default function Day16(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Solving...');\r\n    \r\n    useEffect( () => {\r\n        function solve1and2(lines) {\r\n            console.log('Solve 1');\r\n\r\n            // Parse\r\n            let lineNo = 0;\r\n            let rules =[];\r\n            while (lines[lineNo]) {\r\n                let fieldName = lines[lineNo].split(':')[0];\r\n                for (let rule of lines[lineNo].split(' ')) {\r\n                    let m = rule.match(/(\\d+)-(\\d+)/);\r\n                    if (m) {\r\n                        rules.push({fieldName, min: +m[1], max: +m[2]});\r\n                    }\r\n                }\r\n                lineNo++;\r\n            }\r\n            lineNo++;\r\n            console.log('---'+lines[lineNo]);\r\n            lineNo++;\r\n            let myTicket = lines[lineNo].split(',');\r\n            lineNo++;\r\n            lineNo++;\r\n            console.log('---'+lines[lineNo]);\r\n            lineNo++;\r\n\r\n            let nearbyTickets = [];\r\n            while (lines[lineNo]) {\r\n                nearbyTickets.push(lines[lineNo].split(','));\r\n                lineNo++;\r\n            }\r\n            console.log(nearbyTickets.length)\r\n\r\n            // Check invalid\r\n            function isPossiblyValid(value) {\r\n                for (let rule of rules) {\r\n                    if (value >= rule.min && value <= rule.max) return true;\r\n                }\r\n                return false;\r\n            }\r\n\r\n            let scanningRate = 0;\r\n            for (let ticketNo in nearbyTickets) {\r\n                for (let slot in nearbyTickets[ticketNo]) {\r\n                    let value = +nearbyTickets[ticketNo][slot];\r\n                    if (!isPossiblyValid(value)) {\r\n                        scanningRate += value;\r\n                        delete nearbyTickets[ticketNo];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            setSolution1(scanningRate);\r\n            nearbyTickets = nearbyTickets.filter(x => x);\r\n            console.log(nearbyTickets.length)\r\n\r\n            console.log('Solve 2');\r\n            function possibleFields(value, includeRules) {\r\n                if (!value) console.log('possibleRules('+value+', '+includeRules);\r\n\r\n                let result = [];\r\n                for (let rule of rules) {\r\n                    if (!includeRules || includeRules.includes(rule.fieldName)) {\r\n                        if (value >= rule.min && value <=rule.max) result.push(rule.fieldName);\r\n                    }\r\n                }\r\n                if (!result.length) console.log('possibleRules('+value+', '+includeRules+' returns []');\r\n                return result;\r\n            }\r\n\r\n            let rulesPerSlot = [];\r\n            for (let i in myTicket) {\r\n                console.log('Ticket slot: '+i);\r\n                let fields;\r\n                for (let ticket of nearbyTickets) {\r\n                    if (ticket) fields = possibleFields(+ticket[i], fields);\r\n                }\r\n                rulesPerSlot[i] = {i, fields};\r\n            }\r\n\r\n            rulesPerSlot = rulesPerSlot.sort((a,b) => a.fields.length - b.fields.length);\r\n            for (let i in myTicket) {\r\n                console.log(i, rulesPerSlot[i]);\r\n            }\r\n\r\n            let configs = possibleConfigurations([], 0);\r\n\r\n            function possibleConfigurations(fieldsSoFar, nextSlotIndex) {\r\n                if (nextSlotIndex >= rulesPerSlot.length) return [fieldsSoFar];\r\n\r\n                let configs=[];\r\n                for (let slotField of rulesPerSlot[nextSlotIndex].fields) {\r\n                    if (!fieldsSoFar.some(x => x.slotField === slotField)) {\r\n                        configs = configs.concat( \r\n                            possibleConfigurations( \r\n                                fieldsSoFar.concat({ slot: rulesPerSlot[nextSlotIndex].i, slotField } ), nextSlotIndex+1) \r\n                        );\r\n                    }\r\n                }\r\n                return configs\r\n            }\r\n\r\n            console.log(configs); \r\n            \r\n            let answer = 1;\r\n            for (let f of configs[0]) {\r\n                if (f.slotField.startsWith('departure') ) {\r\n                    console.log(f.slotField + ': ' + myTicket[f.slot]);\r\n                    answer *= +myTicket[f.slot];\r\n                }\r\n                console.log()\r\n            }\r\n            setSolution2(answer);\r\n\r\n        }\r\n\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1and2(t));\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 16</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <div className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport Day1 from './day1/day1.js';\r\nimport Day2 from './day2/day2.js';\r\nimport Day3 from './day3/day3.js';\r\nimport Day4 from './day4/day4.js';\r\nimport Day5 from './day5/day5.js';\r\nimport Day6 from './day6/day6.js';\r\nimport Day7 from './day7/day7.js';\r\nimport Day8 from './day8/day8.js';\r\nimport Day9 from './day9/day9.js';\r\nimport Day10 from './day10/day10.js';\r\nimport Day11 from './day11/day11.js';\r\nimport Day12 from './day12/day12.js';\r\nimport Day13 from './day13/day13.js';\r\nimport Day14 from './day14/day14.js';\r\nimport Day15 from './day15/day15.js';\r\nimport Day16 from './day16/day16.js';\r\nimport './Day.css';\r\n\r\nexport default function Day(props) {\r\n  const states = {\r\n    idle: 'idle',\r\n    active: 'active',\r\n    expanded: 'expanded'\r\n  };\r\n  const [state, setState] = useState(states.idle);\r\n\r\n  var dayComponent;\r\n  switch (props.day) {\r\n    case 1:\r\n      dayComponent = <Day1 />;\r\n      break;\r\n    case 2:\r\n      dayComponent = <Day2 />;\r\n      break;\r\n    case 3:\r\n      dayComponent = <Day3 />;\r\n      break;\r\n    case 4:\r\n      dayComponent = <Day4 />;\r\n      break;\r\n    case 5:\r\n      dayComponent = <Day5 />;\r\n      break;\r\n    case 6:\r\n      dayComponent = <Day6 />;\r\n      break;\r\n    case 7:\r\n      dayComponent = <Day7 />;\r\n      break;\r\n    case 8:\r\n      dayComponent = <Day8 />;\r\n      break;\r\n    case 9:\r\n      dayComponent = <Day9 />;\r\n      break;\r\n    case 10:\r\n      dayComponent = <Day10 />;\r\n      break;\r\n    case 11:\r\n      dayComponent = <Day11 />;\r\n      break;\r\n    case 12:\r\n      dayComponent = <Day12 />;\r\n      break;\r\n    case 13:\r\n      dayComponent = <Day13 />;\r\n      break;\r\n    case 14:\r\n      dayComponent = <Day14 />;\r\n      break;\r\n    case 15:\r\n      dayComponent = <Day15 />;\r\n      break;\r\n    case 16:\r\n      dayComponent = <Day16 />;\r\n      break;\r\n    default:\r\n      dayComponent = <div>Not defined yet</div>\r\n  }\r\n\r\n  let top, left; \r\n  switch (state) {\r\n    case states.idle:\r\n    case states.active:\r\n      let position = parseInt(props.day) - 1;\r\n      top = Math.floor(position / 7) * 20 + 15;\r\n      left = (position % 7) * 12 + 8;\r\n      break;\r\n    case states.expanded:\r\n      top = 10;\r\n      left = 10;\r\n      break;\r\n    default:\r\n      top = 0; left=0;\r\n  }\r\n\r\n  switch (state) {\r\n    case states.idle:\r\n      return (\r\n        <div className=\"Day\" style={{ top: top + 'vh', left: left + 'vw' }} onClick={() => setState(states.active)} >\r\n          Day {props.day}\r\n          {/* <div className='door left back' key='doorleftback' />\r\n          <div className='door right back' key='doorrightback' /> */}\r\n          <div className=\"door left\" key=\"doorleft\">{props.day}</div>\r\n          <div className=\"door right\" key=\"doorright\">Dec</div>\r\n        </div>\r\n      );\r\n    case states.active:\r\n        return (\r\n        <div className=\"Day\" style={{ top: top + 'vh', left: left + 'vw' }} onClick={() => setState(states.expanded)}  >\r\n          <dayComponent.type state={state}/>\r\n          {/* <div className='door left back open' key='doorleftback' />\r\n          <div className='door right back open' key='doorrightback' /> */}\r\n          <div className=\"door left open\" key=\"doorleft\">{props.day}</div>\r\n          <div className=\"door right open\" key=\"doorright\">Dec</div>\r\n        </div>\r\n      );\r\n    case states.expanded:\r\n        return (\r\n        <div className=\"Day expanded\" style={{ top: top + 'vh', left: left + 'vw' }} >\r\n          <dayComponent.type state={state}/>\r\n          <button type=\"button\" onClick={() => setState(states.idle)}>Close</button>  \r\n        </div>\r\n      );\r\n    default:\r\n      return null;\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/bakgrund.80bc4e98.jpg\";","import Day from './Day.js';\r\nimport './App.css';\r\nimport background from './bakgrund.jpg';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <img src={background} style={{width:'100%'}} alt=''/>\r\n      { Array(25).fill(0).map( (_,ix) => <Day day={ix+1} key={ix}/> ) }\r\n      <div style={{position: 'absolute', right: '12vw', bottom: '10vh', height: '10vh', width: '20vw'}}>\r\n        An AdventOfCode exercise by Anders Kökeritz\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}