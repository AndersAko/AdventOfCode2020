{"version":3,"sources":["day1/input.txt","day1/day1.js","day2/input.txt","day2/day2.js","day3/input.txt","day3/day3.js","day4/input.txt","day4/day4.js","day5/input.txt","day5/day5.js","day6/input.txt","day6/day6.js","day7/input.txt","day7/Suitcase.js","day7/day7.js","day8/input.txt","day8/day8.js","day9/input.txt","day9/day9.js","day10/input.txt","day10/day10.js","day11/input.txt","day11/day11.js","day12/input.txt","day12/day12.js","day13/input.txt","day13/day13.js","day14/input.txt","day14/day14.js","day15/input.txt","day15/day15.js","day16/input.txt","day16/day16.js","day17/input.txt","day17/day17.js","day18/input.txt","day18/day18.js","day19/input.txt","day19/day19.js","day20/input.txt","day20/day20.js","day21/input.txt","day21/day21.js","day22/input.txt","day22/day22.js","day23/input.txt","day23/day23.js","day24/input.txt","day24/day24.js","day25/input.txt","day25/day25.js","Day.js","bakgrund.jpg","App.js","reportWebVitals.js","index.js"],"names":["Day1","props","useState","solution1","setSolution1","solution2","setSolution2","useEffect","fetch","inputData","then","r","text","t","String","split","expenses","expense1","expense2","parseInt","solve1","expense3","solve2","Day2","passwords","console","log","count","word","match","exec","min","max","letter","password","lettercount","first","second","state","Day3","treecount","trees","right","down","x","rowcount","length","row","treeRow","Array","Math","floor","fill","concat","from","splice","map","trim","answer","className","value","readOnly","Day4","lines","passport","line","re","fields","f","groups","filter","every","rf","find","field","m","includes","isValid","myPassport","getSeatId","l","replaceAll","seatId","seat","toString","solve1and2","Day6","groupAnswers","groupAnswersAllYes","count1","count2","firstline","answers","Set","a","size","Suitcase","style","transform","Day7","outerBagRules","InnerBagRules","rule","reOuterBag","reInnerBag","outerbagDescr","innerBagText","innerBagMatch","innerBagNum","innerBagDescr","push","descr","num","possibleBags","listOuterBags","bag","bagsFound","outerBag","countInnerBags","innerbag","Day8","runProgram","statements","execute","statement","tokens","acc","ip","executedLines","add","has","status","result","keys","lineNo","replace","Day9","preamble","dig1","dig2","startIndex","slice","digit","part1Digit","validSequence","startingAtIndex","sum","index","start","end","seq","sequence","maxAdapter","sort","b","count3","cache","combinationsFrom","tryIndex","combinations","tryValue","i","Day11","checkConfigs","occupiedFunc","occupiedLimit","configurations","next","seats","c","occupied","stringifiedNext","JSON","stringify","seatsTaken","reduce","y","col","neighbours","p","occupiedCount","dr","dc","dist","Day12","pos","dir","val","ang","PI","cos","sin","round","abs","Day13","timestampNow","busses","departures","bus","departure","firstBus","timeStamp","oldInc","increment","Day14","maskAnd","maskSet","memory","BigInt","adr","setValue","cell","storeValue","fixedBits","floatingBits","bit","Day15","number","last","undefined","spokenTurn","Map","turn","set","lastSpoken","get","Day16","rules","fieldName","myTicket","nearbyTickets","isPossiblyValid","scanningRate","ticketNo","slot","possibleFields","includeRules","rulesPerSlot","ticket","configs","possibleConfigurations","fieldsSoFar","nextSlotIndex","slotField","some","startsWith","ConwayCubes","dimensions","this","cubes","coord","w","z","makeId","updateMinMax","dx","dy","dz","dw","isActive","n","setNext","s","Day17","setState","print","step","countActive","cubes4","Day18","operate","arg1","arg2","op","evaluate","operator","token","lparams","j","matchAll","scan","k","partResult","Day19","readRules","allRules","ruleSets","ruleSet","isNaN","doesMatchSequence","string","subrule","remaining","substr","ruleOptions","found","countFirst","matched","countSecond","Day20","rotatedSigs","tiles","tileNo","tile","sigs","join","reverse","squareSize","sqrt","firstmatch","findMatch","position","spotX","spotY","matchingRotations","leftTile","upTile","rot","rotation","location","possibleTiles","possibleNextTile","getRow","rotate","image","solution","tilerow","out","getImage","monster","rotImage","shiftLen","shift","roughness","Day21","possibleIngredients","allIngredients","allergen","ingredients","ingr","allergenics","Object","entries","flat","nonAllergenics","ingredientsList","removedOne","indexToRemove","indexOf","localeCompare","fontSize","Day22","readDeck","deck","card","play","deck1","deck2","recursive","deckHistory","addDecks","decks","card1","card2","score","player1Deck","player2Deck","winner","Day23","getCups","cups","cup","starting","header","output","gen","done","cupInput","maxCup","current","move","picked","dest","Day24","flips","getBlackNeighbors","x0","y0","check","day","neighbors","Day25","publicCard","publicDoor","loopCard","loopDoor","valueCard","valueDoor","key","key2","Day","dayComponent","top","left","states","onClick","type","App","src","background","width","alt","_","ix","bottom","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0782a2c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/input.413ac430.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day1(props) {\n    function solve1(expenses) {\n        for (let expense1 of expenses) {\n            for (let expense2 of expenses) {\n                if (parseInt(expense1) + parseInt(expense2) === 2020) {\n                    setSolution1(parseInt(expense1) * parseInt(expense2));\n                    return expenses;\n                }\n            }\n        }\n        setSolution1('Not found');\n        return expenses;\n    }\n    \n    function solve2(expenses) {\n        for (let expense1 of expenses) {\n            for (let expense2 of expenses) {\n                for (let expense3 of expenses) {\n    \n                    if (parseInt(expense1) + parseInt(expense2) + parseInt(expense3) === 2020) {\n                        setSolution2(parseInt(expense1) * parseInt(expense2) * parseInt(expense3));\n                        return expenses;\n                    }\n                }\n            }\n        }\n        setSolution2('Not found');\n        return expenses;\n    }\n\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n\n    useEffect( () => {\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n')) \n        .then(t => solve1(t) )\n        .then(t => solve2(t) );\n    }, [solution1, solution2]);\n\n    return (\n        <div>\n            <b>Day1</b><br/>\n            Part 1: {solution1}\n            <br/>\n            Part 2: {solution2}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.c988762e.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day2(props) {\n    function solve1(passwords) {\n        console.log('Solve 1');\n        \n        let count = 0;\n        for (let word of passwords) {\n            let re = /(\\d+)-(\\d+) (\\w): (\\w+)/g\n            let match = re.exec(word);\n            //\n            let min = parseInt(match[1]);\n            let max = parseInt(match[2]);\n            let letter = match[3];\n            let password = match[4];\n            let lettercount = 0;\n            for (let char of password) {\n                if (char ===letter) {\n                    lettercount++;\n                }\n            }\n            if (lettercount >= min && lettercount <= max) {\n                count++;\n            } else {\n            }\n        }\n        setSolution1(count);\n        return passwords;\n    }\n    \n    function solve2(passwords) {\n        console.log('Solve 2');\n        \n        let count = 0;\n        for (let word of passwords) {\n            let re = /(\\d+)-(\\d+) (\\w): (\\w+)/g\n            let match = re.exec(word);\n            let first = parseInt(match[1]);\n            let second = parseInt(match[2]);\n            let letter = match[3];\n            let password = match[4];\n            if ( (password[first-1]===letter) !== (password[second-1]===letter)) {\n                count++;\n            }\n        }\n        setSolution2(count);\n        return passwords;\n    }\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n\n    useEffect( () => {\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n')) \n        .then(t => solve1(t) )\n        .then(t => solve2(t) );\n    }, [solution1, solution2]);\n    \n    return (\n        <div>\n            <b>Day 2</b><br/>\n            Part 1: {solution1}\n            {props.state ==='expanded' && (<><br/> </>) }\n            <br/>\n            Part 2: {solution2}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.9cf06ee3.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day3(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n    \n    useEffect( () => {\n        function treecount(trees, right, down) {\n            let x = 0;\n            let count = 0;\n            for (let rowcount = 0; rowcount<trees.length; rowcount+=down) {\n                let row = trees[rowcount];\n                let treeRow = Array(row.length * Math.floor(x/row.length)).fill('_').concat(Array.from(row));\n                if (row[x % row.length] === '#') {\n                    treeRow.splice(x, 1,'X');\n                    count++;\n                } else {\n                    treeRow.splice(x, 1,'O');\n                }\n                // log(rowcount, treeRow.join(''));\n                x +=right;\n            }\n            return count;\n        }\n      \n        function solve1(trees) {\n            console.log('Solve 1');\n            let count = treecount(trees, 3, 1);\n            setSolution1(count);\n        }\n\n        function solve2(trees) {\n            console.log('Solve 2');\n            let answer = treecount(trees, 1, 1) * treecount(trees, 3, 1) * treecount(trees, 5, 1) *\n                treecount(trees, 7, 1) * treecount(trees, 1, 2);\n            setSolution2(answer);\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1(t));\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve2(t) );\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 3</b><br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <textarea className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.e8912674.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day4(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n    \n    useEffect( () => {\n        // function log(...message) {\n        //     sidePanelText = sidePanelText.concat('\\n', ...message);\n        //     setSidePanel(sidePanelText);\n        // }\n\n        function solve1(lines) {\n            console.log('Solve 1');\n            let passport = [];\n            let count = 0;\n            for(let line of lines) {\n                let re = /(?<fld>\\w+):(.+)/;\n                let fields = line.split(' ').map(f => f.match(re)?.groups[\"fld\"]).filter(f=> !!f);\n                // console.log('Line: ', line, 'Fields: ', fields);\n                if (fields && fields.length>0) {\n                    passport = passport.concat(fields);\n                } else {\n                    let myPassport = passport;\n                    let requiredFields = ['byr', 'iyr', 'eyr', 'hgt', 'hcl', 'ecl', 'pid'];\n                    if (requiredFields.every(f => myPassport.includes(f))) {\n                        count ++;\n                    }\n                    passport=[];\n                }\n            }\n            setSolution1(count);\n        }\n\n        function solve2(lines) {\n            console.log('Solve 2');\n            let passport = [];\n            let count = 0;\n            for(let line of lines) {\n                let re = /(?<fld>\\w+):(?<value>.+)/;\n                let fields = line.split(' ')\n                    .map(f => f.match(re)?.groups).filter(f=> f && f['fld']);\n                // console.log('Line: ', line, 'Fields: ', fields);\n                if (fields && fields.length>0) {\n                    passport = passport.concat(fields);\n                } else {\n                    if (isValid(passport)) {\n                        // console.log('OK');\n                        count++;\n                    } else {\n                        // console.log('Not OK');\n                    }\n                    passport=[];\n                }\n            }\n            setSolution2(count);\n\n            function isValid(passport) {\n                // console.log('Checking passport: ', passport);\n                let requiredFields = ['byr', 'iyr', 'eyr', 'hgt', 'hcl', 'ecl', 'pid'];\n                if (!requiredFields.every(rf => passport.find(f => f['fld'] && f['fld'] === rf))) {\n                    return false;\n                }\n                for (let field of passport) {\n                    let value = field['value'];\n                    switch (field['fld']) {\n                        case 'byr':\n                            if (value.length !== 4) return false;\n                            if (!parseInt(value) || parseInt(value) < 1920 || parseInt(value) > 2002) {\n                                return false;\n                            }\n                            break;\n                        case 'iyr':\n                            if (value.length !== 4) return false;\n                            if (!parseInt(value) || parseInt(value) < 2010 || parseInt(value) > 2020) {\n                                return false;\n                            }\n                            break;\n                        case 'eyr':\n                            if (value.length !== 4) return false;\n                            if (!parseInt(value) || parseInt(value) < 2020 || parseInt(value) > 2030) {\n                                return false;\n                            }\n                            break;\n                        case 'hgt':\n                            let m = value.match(/(\\d+)(in|cm)/);\n                            if (!m || !m[1] || !parseInt(m[1]) ) return false;\n                            if (m[2] === 'in' && (parseInt(m[1]) < 59 || parseInt(m[1]) > 76) ) return false; \n                            if (m[2] === 'cm' && (parseInt(m[1]) < 150 || parseInt(m[1]) > 193) ) return false; \n                            break;\n                        case 'hcl':\n                            if (!value.match(/#[0-9a-f]{6}/) ) return false;\n                            break;\n                        case 'ecl':\n                            if (value.length !== 3 || !['amb','blu','brn','gry','grn','hzl','oth'].includes(value)) return false;\n                            break;\n                        case 'pid':\n                            if (!value.match(/^[0-9]{9}$/) ) return false;\n                            break;\n                        case 'cid':\n                            break;\n                        default:\n                            console.log('Missing case', field['fld']);\n                    }\n                }\n                return true;\n            }\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1(t));\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve2(t) );\n    }, []);\n    \n        return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 4</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <textarea className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.ae01de17.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day4(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n    \n    useEffect( () => {\n        // function log(...message) {\n        //     sidePanelText = sidePanelText.concat('\\n', ...message);\n        //     setSidePanel(sidePanelText);\n        // }\n\n        function solve1and2(lines) {\n            console.log('Solve 1');\n\n            function getSeatId(l) {\n                return parseInt(l.replaceAll('B', '1').replaceAll('F', '0').replaceAll('R', 1).replaceAll('L', 0), 2);\n            }\n            let min = Math.min(...lines.map(getSeatId));\n            let max = Math.max(...lines.map(getSeatId));\n            setSolution1(max);\n            console.log('Max: ', max, 'Min', min);\n            for (let seatId = min; seatId< max; seatId++) {\n                if (!lines.map(getSeatId).includes(seatId)) {\n                    let seat = seatId.toString(2).replaceAll('1', 'B').replaceAll('0','F').replaceAll('1','R').replaceAll('0', 'L')\n                    console.log('Seat ', seatId, seat, 'is not taken');\n                    setSolution2(seatId);\n                }\n            }\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1and2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 5</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <textarea className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.57f71352.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day6(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n    \n    useEffect( () => {\n        // function log(...message) {\n        //     sidePanelText = sidePanelText.concat('\\n', ...message);\n        //     setSidePanel(sidePanelText);\n        // }\n\n        function solve1and2(lines) {\n            console.log('Solve 1 & 2');\n            let count1 = 0, count2=0;\n            let groupAnswers; \n            let groupAnswersAllYes; \n            let firstline = true;\n\n            for (let line of lines) {\n                if (line !=='') {\n                    let answers=line.split('');\n                    if (firstline) {\n                        groupAnswers = new Set(answers);\n                        groupAnswersAllYes = new Set(answers);\n                        firstline = false;\n                    } else {\n                        // Check groupAnswersAllYes, remove any missing in answers\n                        groupAnswersAllYes = new Set([...groupAnswersAllYes].filter(a => answers.includes(a)));\n                        // Add answers to groupAnswers\n                        groupAnswers = new Set([...groupAnswers].concat(answers));\n                        // answers.forEach(answer => groupAnswers.add(answer));\n                    }\n                } else {\n                    console.log('Group answers:', groupAnswers, groupAnswers.size);\n                    count1 += groupAnswers.size\n                    console.log('Group yes answers:', groupAnswersAllYes, groupAnswersAllYes.size);\n                    count2 += groupAnswersAllYes.size\n                    firstline = true;\n                }\n            }   \n            setSolution1(count1);\n            setSolution2(count2);\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1and2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 6</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <textarea className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.9316cd3d.txt\";","import './Suitcase.css'\n\nexport default function Suitcase(props) {\n    return (\n        <div className='Suitcase' >\n            <div className='face back' />\n            <div className='face bottom' />\n            <div className='face left' />\n            <div className='face right' />\n            <div className='face front' />\n            {/* <div className='fulllid' style={{transform: 'rotateX(45deg)', transformStyle: 'preserve-3d' }}> */}\n            <div className='fulllid' style={{transform: 'rotateX(0deg)' }}>\n                <div className='face lidback' />\n                <div className='face lidleft' />\n                <div className='face lidright' />\n                <div className='face lid' />\n                <div className='face lidfront' />\n            </div>\n        </div>\n    )\n}","import inputData from './input.txt';\nimport React, {useState, useEffect} from 'react';\nimport Suitcase from './Suitcase';\n\nexport default function Day7(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n    \n    useEffect( () => {\n        // function log(...message) {\n        //     sidePanelText = sidePanelText.concat('\\n', ...message);\n        //     setSidePanel(sidePanelText);\n        // }\n\n        function solve1and2(lines) {\n            console.log('Solve 1 & 2');\n            let outerBagRules = {};     // { bag:  [outerbag1, outerbag2]}\n            let InnerBagRules = {};     // bag: [{descr: innerbag1, num: <count>}]  \n           for (let rule of lines ) {\n                let reOuterBag = /(?<otherbag>\\w+ \\w+) bags contain (?<innerbags>.*)/; \n                let reInnerBag = /(?<num>\\d+) (?<innerbag>\\w+ \\w+)/; \n                let outerbagDescr = rule.match(reOuterBag).groups['otherbag'];\n                \n                for (let innerBagText of rule.match(reOuterBag).groups['innerbags']?.split(',')) {\n                    let innerBagMatch = innerBagText.match(reInnerBag);\n                    if (!innerBagMatch) {\n                        console.log(\"Innerbag description didn't match, skipped '\", innerBagText, \"'\");\n                        continue;\n                    }\n                    let innerBagNum = innerBagMatch.groups['num'];\n                    let innerBagDescr = innerBagMatch.groups['innerbag'];\n                    if (outerBagRules[innerBagDescr]) {\n                        outerBagRules[innerBagDescr].push(outerbagDescr);\n                    } else {\n                        outerBagRules[innerBagDescr] = [outerbagDescr];\n                    }\n                    if (InnerBagRules[outerbagDescr]) {\n                        InnerBagRules[outerbagDescr].push({descr: innerBagDescr, num: innerBagNum});\n                    } else {\n                        InnerBagRules[outerbagDescr] = [{descr: innerBagDescr, num: innerBagNum}];\n                    }\n                    \n                    // console.log(\"RULE: \" + outerbagDescr + \" contains \" + innerBagNum, innerBagDescr);\n                }\n            }\n            // Until no parents: Get outer bags of \"shiny gold\"; Get outer bags of these\n            function listOuterBags(bag) {\n                let bagsFound = [bag];\n                for (let outerBag of outerBagRules[bag]||[]) {\n                    bagsFound = bagsFound.concat(listOuterBags(outerBag));\n                } \n                return bagsFound;\n            }\n            let possibleBags = listOuterBags('shiny gold');\n            console.log (\"Possible outer bags\", possibleBags, \"reduced to\", new Set(possibleBags))\n            setSolution1(new Set(possibleBags).size -1);\n\n            function countInnerBags(bag) {\n                let count = 1; // This bag\n                for (let innerbag of InnerBagRules[bag]||[]) {\n                    count += innerbag.num * countInnerBags(innerbag.descr);\n                }\n                return count;\n            }\n            setSolution2(countInnerBags('shiny gold')-1);\n        }\n\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1and2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 7</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' >\n                    <Suitcase />\n                </div>\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.7b2e3b25.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day8(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n    \n    useEffect( () => {\n        function runProgram(statements) {\n            function execute(statement) {\n                let tokens = statement.split(' ');\n                switch (tokens[0]) {\n                    case 'acc':\n                        acc += parseInt(tokens[1]);\n                        break;\n                    case 'jmp':\n                        ip += parseInt(tokens[1]);\n                        return;\n                    case 'nop':\n                        break;\n                    default: \n                        console.log (\"Illegal opcode\", tokens[0], \"in line\", statement);\n                }\n                ip += 1;\n            }\n\n            let ip = 0, acc = 0;\n            let executedLines = new Set();\n            do {\n                executedLines.add(ip);\n                execute(statements[ip]);\n                if (executedLines.has(ip)) {\n                    // console.log('Infinite loop detected in line ', ip);\n                    return {status: 'InfiniteLoop', acc, ip };\n                };\n            } while (ip < statements.length);\n            return {status: 'EndOK', acc, ip };\n        }\n\n        function solve1and2(lines) {\n            console.log('Solve 1');\n\n            let result = runProgram(lines);\n            setSolution1(result.acc);\n\n            for (let lineNo of lines.keys()) {\n                let statements = [...lines];    // Copy program\n                if (statements[lineNo].match(/^(nop) /)) {\n                    statements[lineNo] = statements[lineNo].replace('nop', 'jmp');\n                } else if (statements[lineNo].match(/^(jmp) /)) {\n                    statements[lineNo] = statements[lineNo].replace('jmp', 'nop');\n                }\n                let result = runProgram(statements);\n                if (result.status === 'EndOK') {\n                    console.log('Program termnates by modiying line ', lineNo, lines[lineNo]);\n                    setSolution2(result.acc);\n                    break;\n                }\n            }\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1and2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 8</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.fa9d2d21.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day9(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n    \n    useEffect( () => {\n        function solve1and2(lines) {\n            console.log('Solve 1');\n            let preambleLength = 25;\n    \n            function isValid(x, preamble) {\n                for (let dig1 of preamble) {\n                    for (let dig2 of preamble) {\n                        if (dig1 !== dig2 && parseInt(x) === parseInt(dig1)+parseInt(dig2)) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            }\n\n            let startIndex = 0;\n            for (let digit of lines.slice(preambleLength)) {\n                let preamble = lines.slice(startIndex,startIndex+preambleLength);\n                startIndex ++;\n                if (!isValid(digit, preamble)) {\n                    console.log(digit, 'is not valid according to ', preamble);\n                    setSolution1(digit);\n                    var part1Digit = parseInt(digit);\n                }\n            }\n            console.log('Solve2', part1Digit);\n\n            function validSequence(startingAtIndex) {\n                let sum = 0;\n                for (let index = startingAtIndex; index<lines.length; index++) {\n                    sum += parseInt(lines[index]);\n                    if (sum === part1Digit && index !==startingAtIndex) return {start: startingAtIndex, end: index};\n                    if (sum > part1Digit) return false;\n                }\n                return false;\n            }\n            for (let index = 0; index<lines.length; index++) {\n                let seq = validSequence(index)\n                if (seq) {\n                    console.log('Valid sequence at ', index, 'to', seq['end'], '= '+lines[seq.start]+' to '+lines[seq.end] );\n                    let sequence = lines.slice(seq.start, seq.end+1);\n                    console.log(sequence, Math.min(...sequence), Math.max(...sequence));\n                    setSolution2(Math.min(...sequence) + Math.max(...sequence))\n                }\n            }\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1and2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 9</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.04e3ea07.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day9(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n    \n    useEffect( () => {\n        function solve1and2(lines) {\n            console.log('Solve 1');\n            lines.push('0');\n            let maxAdapter = Math.max(...lines)+3;\n            lines.push((maxAdapter).toString());\n\n            lines.sort((a,b) => a-b);\n            let count1=0, count3=0;\n            for (let index=1; index<lines.length; index++) {\n                if (lines[index]-lines[index-1] === 1) {\n                    count1++;\n                } else if (lines[index]-lines[index-1] === 3) {\n                    count3++;\n                } else {\n                    console.log('Gap of ', lines[index]-lines[index-1]);\n                }\n\n            }\n            console.log('Differences of 1: '+count1+', diff of 3: '+count3);\n            setSolution1(count1*count3);\n\n            console.log('Solve 2');\n            function combinationsFrom(tryIndex) {\n                if (cache[tryIndex]) {return cache[tryIndex];}\n                // console.log('CombinationsFrom ', tryIndex, lines[tryIndex]);\n                let combinations = 0;\n                let tryValue = +lines[tryIndex];\n                for (let i = tryIndex+1; lines[i] <= tryValue+3 && i < lines.length; i++) {\n                    if (i===lines.length-1) {\n                        return 1;\n                    }\n                    combinations += combinationsFrom(i);\n                }\n                cache[tryIndex] = combinations;\n                return combinations;\n            }\n            let cache = {};\n            let count=combinationsFrom(0);\n\n            setSolution2(count);\n\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1and2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 10</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.810dbf5e.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day11(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n    \n    useEffect( () => {\n        function solve1and2(lines) {\n            console.log('Solve 1');\n            function neighbours(row, col) {\n                row = +row; col = +col;\n                let result = [];\n                for (let r = row-1; r<=row+1; r++) {\n                    for (let c=col-1; c<=col+1; c++) {\n                        if (r>=0 && r<lines.length && c>=0 && c<lines[0].length && (r!==row || c!==col) ) {\n                            result.push({r,c});\n                        }\n                    }\n                }\n                return result;\n            }\n            function occupiedInSight(row, col) {\n                row = +row; col = +col;\n                let occupiedCount = 0;\n                for (let dr = -1; dr<=+1; dr++) {\n                    for (let dc=-1; dc<=+1; dc++) {\n                        if (dr===0 && dc===0) continue;\n                        let occupied = false;\n                        let dist = 1;\n                        while (row+dr*dist>=0 && row+dr*dist<lines.length && col+dc*dist>=0 && col+dc*dist<lines[0].length) {\n                            if (seats[row+dr*dist][col+dc*dist] ==='#') {\n                                occupied=true;\n                                break;\n                            }\n                            if (seats[row+dr*dist][col+dc*dist] ==='L') break;\n\n                            dist++;\n                        }\n                        if (occupied) occupiedCount++;\n                    }\n                }\n                return occupiedCount;\n            }\n\n            function checkConfigs( occupiedFunc, occupiedLimit) {\n                let configurations = new Set();\n                while (true) {\n                    let next = seats.map(x => x.slice());\n    \n                    for (let r in seats) {\n                        for (let c in seats[r]) {\n                            let occupied = occupiedFunc(r,c);\n                            if (seats[r][c] === 'L' && occupied===0) next[r][c]='#';\n                            else if (seats[r][c] === '#' && occupied>=occupiedLimit) next[r][c]='L';\n                        }\n                        // console.log(next[r].join(''));\n                    }\n                    // console.log('');\n                    let stringifiedNext = JSON.stringify(next);\n                    if (configurations.has(stringifiedNext)) {\n                        let seatsTaken = next.reduce((count, x) => count + x.reduce( (count,y) => count + (y==='#'?1:0), 0 ),0);\n                        console.log('Same config seen before', seatsTaken);\n                        return seatsTaken;\n                    }\n                    configurations.add(stringifiedNext);\n                    seats = next;\n                }\n    \n            }\n\n            let seats = lines.map(x => Array.from(x));\n            let seatsTaken = checkConfigs ( (r,c) => neighbours(r,c).filter(p => seats[p.r][p.c] ==='#').length, 4)\n            setSolution1(seatsTaken);\n\n            seats = lines.map(x => Array.from(x));\n            seatsTaken = checkConfigs ( occupiedInSight, 5);\n            setSolution2(seatsTaken);\n\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1and2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 11</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.6ba66d3e.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day12(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n    \n    useEffect( () => {\n        function solve1(lines) {\n            console.log('Solve 1');\n            let pos = {x: 0, y:0};  // x east, y north\n            let dir = {x: 1, y:0};\n            for (let line of lines) {\n                let re = /(?<action>\\w)(?<val>\\d+)/;\n                let match = line.match(re);\n                // if (match) console.log(match.groups['action'], match.groups['val']);\n                // else console.log('no match on ', line)\n                let val = +match.groups['val'];\n                switch (match.groups['action']) {\n                    case 'N':\n                        pos.y += val;\n                        break;\n                    case 'S':\n                        pos.y -= val;\n                        break;\n                    case 'E':\n                        pos.x += val;\n                        break;\n                    case 'W':\n                        pos.x -= val;\n                        break;\n                    case 'F':\n                        pos.x += dir.x * val;\n                        pos.y += dir.y * val;\n                        break;\n                    case 'R':\n                        val = -val;\n                        // fallthrough\n                    case 'L':\n                        const toRad = (deg) => deg*Math.PI/180;\n                        let ang = toRad(val);\n                        let newDir = { \n                            x: dir.x*Math.cos(ang)-dir.y*Math.sin(ang),\n                            y: dir.x*Math.sin(ang)+dir.y*Math.cos(ang)\n                        }\n                        dir = newDir;\n                        break;\n                    default:\n                        console.log('Unknown action', match.groups['action']);\n                }\n                // console.log('Position: ', pos, 'facing', dir);\n            }\n            setSolution1(Math.round(Math.abs(pos.x) + Math.abs(pos.y)));\n        }\n\n        function solve2(lines) {\n            console.log('Solve 2');\n            let pos = {x: 0, y:0};  // x east, y north\n            let dir = {x: 10, y:1}; // waypoint\n            for (let line of lines) {\n                let re = /(?<action>\\w)(?<val>\\d+)/;\n                let match = line.match(re);\n                if (match) console.log(match.groups['action'], match.groups['val']);\n                else console.log('no match on ', line)\n                let val = +match.groups['val'];\n                switch (match.groups['action']) {\n                    case 'N':\n                        dir.y += val;\n                        break;\n                    case 'S':\n                        dir.y -= val;\n                        break;\n                    case 'E':\n                        dir.x += val;\n                        break;\n                    case 'W':\n                        dir.x -= val;\n                        break;\n                    case 'F':\n                        pos.x += dir.x * val;\n                        pos.y += dir.y * val;\n                        break;\n                    case 'R':\n                        val = -val;\n                        // fallthrough\n                    case 'L':\n                        const toRad = (deg) => deg*Math.PI/180;\n                        let ang = toRad(val);\n                        let newDir = { \n                            x: dir.x*Math.cos(ang)-dir.y*Math.sin(ang),\n                            y: dir.x*Math.sin(ang)+dir.y*Math.cos(ang)\n                        }\n                        dir = newDir;\n                        break;\n                    default:\n                        console.log('Unknown action', match.groups['action']);\n                }\n                // console.log('Position: ', pos, 'waypoint', dir);\n            }\n            setSolution2(Math.round(Math.abs(pos.x) + Math.abs(pos.y)));\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1(t));\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 12</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.90ffd618.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day13(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n    \n    useEffect( () => {\n        function solve1(lines) {\n            console.log('Solve 1');\n\n            let timestampNow = parseInt(lines[0]);\n            let busses = lines[1].split(',');\n            let departures = [];\n            for (let bus of busses) {\n                if (bus ==='x') continue;\n                bus = +bus;\n                let departure = Math.floor(timestampNow/bus)*bus + bus;\n                departures.push({bus, departure});\n                console.log('Next bus '+bus+' leaves at '+departure);\n            }\n            let firstBus = departures.sort( (a,b) => a.departure - b.departure)[0];\n            setSolution1(firstBus.bus * (firstBus.departure - timestampNow));\n        }\n\n        function solve2(lines) {\n            console.log('Solve 2');\n            let busses = lines[1].split(',');\n            let timeStamp = 1;\n            let oldInc = 1;\n            while (true) {\n                let match = true;\n                let increment = 1;\n                for (let bus in busses) {\n                    if (busses[bus] === 'x') continue;\n                    if ( (timeStamp + +bus) % +busses[bus] !== 0) { match = false; break; }\n                    increment *= +busses[bus];\n                }\n                if (match) {\n                    console.log('Match for all busses at ', timeStamp);\n                    break;\n                }\n                timeStamp += increment;\n                if (increment !== oldInc) {\n                    oldInc = increment;\n                    console.log(timeStamp + ': Increment=' + increment);\n                }\n            }\n            setSolution2(timeStamp);\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1(t));\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 13</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.fa66b93d.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n/* global BigInt */\n\nexport default function Day14(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n    \n    useEffect( () => {\n        function solve1(lines) {\n            console.log('Solve 1');\n\n            let memory=[];\n            let maskAnd, maskSet;\n            for (let line of lines) {\n                let re = /(?<cmd>mask|mem)(\\[(?<adr>\\d+)\\])? = (?<val>[\\dX]+)/;\n                let match = line.match(re);\n                let val = match?.groups['val'];\n\n                switch (match && val && match?.groups['cmd']) {\n                    case 'mask':\n                        maskAnd = val.replaceAll('1','0').replaceAll('X','1');\n                        maskAnd = BigInt(parseInt(maskAnd,2));\n                        maskSet = val.replaceAll('X','0');\n                        maskSet = BigInt(parseInt(maskSet,2));\n                        break;\n                    case 'mem':\n                        let adr = match?.groups['adr'];\n                        if (!adr) console.log('No address found');\n                        let setValue = (BigInt(parseInt(val,10)) & maskAnd) | maskSet;\n                        memory[adr] = setValue;\n                        break;\n                    default:\n                        console.log('Unknown command or value', match?.groups['cmd'], val, 'in', line);\n                } \n            }\n            let sum = 0n;\n            for (let cell in memory) {\n                if (cell) sum += memory[cell];\n            }\n            setSolution1(sum.toString(10));\n        }\n\n        function solve2(lines) {\n            // Store <value> in the addresses defined by fixedBits and floatingBits\n            function storeValue(fixedBits, floatingBits, value) {\n                if (!floatingBits) {\n                    memory[fixedBits] = value;\n                }\n                for (let bit = 1n; bit <= floatingBits; bit = bit<<1n) {\n                    if (floatingBits & bit) {\n                        storeValue(fixedBits | bit, floatingBits^bit, value);   // Clear floating bit, set for both 0 and 1 in that bit\n                        storeValue( (fixedBits|bit) ^bit, floatingBits^bit, value);\n                        break;\n                    }\n                }\n            }\n            console.log('Solve 2');\n\n            let memory=[];\n            let maskAnd, maskSet;\n            for (let line of lines) {\n                let re = /(?<cmd>mask|mem)(\\[(?<adr>\\d+)\\])? = (?<val>[\\dX]+)/;\n                let match = line.match(re);\n                let val = match?.groups['val'];\n\n                switch (match && val && match?.groups['cmd']) {\n                    case 'mask':\n                        maskAnd = val.replaceAll('1','0').replaceAll('X','1');\n                        maskAnd = BigInt(parseInt(maskAnd,2));\n                        maskSet = val.replaceAll('X','0');\n                        maskSet = BigInt(parseInt(maskSet,2));\n                        break;\n                    case 'mem':\n                        let adr = match?.groups['adr'];\n                        if (!adr) console.log('No address found');\n                        storeValue(BigInt(adr) | maskSet, maskAnd, BigInt(parseInt(val,10)));\n                        break;\n                    default:\n                        console.log('Unknown command or value', match?.groups['cmd'], val, 'in', line);\n                } \n            }\n            let sum = 0n;\n            for (let cell in memory) {\n                if (cell) sum += memory[cell];\n            }\n            setSolution2(sum.toString(10));\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1(t));\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 14</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.39c1f869.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\nexport default function Day15(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Solving...');\n    \n    useEffect( () => {\n        function solve1(lines) {\n            console.log('Solve 1');\n            let last=undefined;\n            let spokenTurn = new Map(); \n            let turn = 0;\n            for (let number of lines[0].split(',')) {\n                spokenTurn.set(last, turn);\n\n                number = parseInt(number,10);\n                last = number;\n                turn++;\n            }\n\n            let number;\n            while (turn < 2020) {\n                let lastSpoken = spokenTurn.get(last);\n                number = lastSpoken ? turn - lastSpoken : 0;\n                spokenTurn.set(last, turn);\n                turn ++;\n                // console.log(turn, number, last);\n                last = number;\n            }\n            console.log('Last spoken number: ', number);\n            setSolution1(number);\n        }\n\n        function solve2(lines) {\n            console.log('Solve 2');\n            let last=undefined;\n            let spokenTurn = new Map(); \n            let turn = 0;\n            for (let number of lines[0].split(',')) {\n                spokenTurn.set(last, turn);\n\n                number = parseInt(number,10);\n                last = number;\n                turn++;\n            }\n\n            let number;\n            while (turn < 30000000) {\n                let lastSpoken = spokenTurn.get(last);\n                number = lastSpoken ? turn - lastSpoken : 0;\n                spokenTurn.set(last, turn);\n                turn ++;\n                last = number;\n                if (turn % 1000000 ===0) {\n                    console.log(turn, number, spokenTurn.size);\n                    setSolution2('Solving...'+turn/300000+'%');\n                }\n            }\n            setSolution2(number);\n         }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1(t));\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 15</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.86aa514d.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\nexport default function Day16(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Solving...');\n    \n    useEffect( () => {\n        function solve1and2(lines) {\n            console.log('Solve 1');\n\n            // Parse\n            let lineNo = 0;\n            let rules =[];\n            while (lines[lineNo]) {\n                let fieldName = lines[lineNo].split(':')[0];\n                for (let rule of lines[lineNo].split(' ')) {\n                    let m = rule.match(/(\\d+)-(\\d+)/);\n                    if (m) {\n                        rules.push({fieldName, min: +m[1], max: +m[2]});\n                    }\n                }\n                lineNo++;\n            }\n            lineNo++;\n            console.log('---'+lines[lineNo]);\n            lineNo++;\n            let myTicket = lines[lineNo].split(',');\n            lineNo++;\n            lineNo++;\n            console.log('---'+lines[lineNo]);\n            lineNo++;\n\n            let nearbyTickets = [];\n            while (lines[lineNo]) {\n                nearbyTickets.push(lines[lineNo].split(','));\n                lineNo++;\n            }\n            console.log(nearbyTickets.length)\n\n            // Check invalid\n            function isPossiblyValid(value) {\n                for (let rule of rules) {\n                    if (value >= rule.min && value <= rule.max) return true;\n                }\n                return false;\n            }\n\n            let scanningRate = 0;\n            for (let ticketNo in nearbyTickets) {\n                for (let slot in nearbyTickets[ticketNo]) {\n                    let value = +nearbyTickets[ticketNo][slot];\n                    if (!isPossiblyValid(value)) {\n                        scanningRate += value;\n                        delete nearbyTickets[ticketNo];\n                        break;\n                    }\n                }\n            }\n            setSolution1(scanningRate);\n            nearbyTickets = nearbyTickets.filter(x => x);\n            console.log(nearbyTickets.length)\n\n            console.log('Solve 2');\n            function possibleFields(value, includeRules) {\n                if (!value) console.log('possibleRules('+value+', '+includeRules);\n\n                let result = [];\n                for (let rule of rules) {\n                    if (!includeRules || includeRules.includes(rule.fieldName)) {\n                        if (value >= rule.min && value <=rule.max) result.push(rule.fieldName);\n                    }\n                }\n                if (!result.length) console.log('possibleRules('+value+', '+includeRules+' returns []');\n                return result;\n            }\n\n            let rulesPerSlot = [];\n            for (let i in myTicket) {\n                console.log('Ticket slot: '+i);\n                let fields;\n                for (let ticket of nearbyTickets) {\n                    if (ticket) fields = possibleFields(+ticket[i], fields);\n                }\n                rulesPerSlot[i] = {i, fields};\n            }\n\n            rulesPerSlot = rulesPerSlot.sort((a,b) => a.fields.length - b.fields.length);\n            for (let i in myTicket) {\n                console.log(i, rulesPerSlot[i]);\n            }\n\n            let configs = possibleConfigurations([], 0);\n\n            function possibleConfigurations(fieldsSoFar, nextSlotIndex) {\n                if (nextSlotIndex >= rulesPerSlot.length) return [fieldsSoFar];\n\n                let configs=[];\n                for (let slotField of rulesPerSlot[nextSlotIndex].fields) {\n                    if (!fieldsSoFar.some(x => x.slotField === slotField)) {\n                        configs = configs.concat( \n                            possibleConfigurations( \n                                fieldsSoFar.concat({ slot: rulesPerSlot[nextSlotIndex].i, slotField } ), nextSlotIndex+1) \n                        );\n                    }\n                }\n                return configs\n            }\n\n            console.log(configs); \n            \n            let answer = 1;\n            for (let f of configs[0]) {\n                if (f.slotField.startsWith('departure') ) {\n                    console.log(f.slotField + ': ' + myTicket[f.slot]);\n                    answer *= +myTicket[f.slot];\n                }\n                console.log()\n            }\n            setSolution2(answer);\n\n        }\n\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1and2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 16</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.a91837f2.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\nclass ConwayCubes {\n    constructor(dimensions) {\n        this.cubes = {};\n        this.min = {};\n        this.max = {};\n        this.dimensions = dimensions;\n    }\n\n    makeId(coord) { return (coord.w??'')+','+coord.z+','+coord.y+','+coord.x; }\n    updateMinMax(x,y,z,w) {\n        this.min.x = Math.min(this.min.x??x,x);\n        this.min.y = Math.min(this.min.y??y,y);\n        this.min.z = Math.min(this.min.z??z,z);\n        this.max.x = Math.max(this.max.x??x,x);\n        this.max.y = Math.max(this.max.y??y,y);\n        this.max.z = Math.max(this.max.z??z,z);\n        this.min.w = Math.min(this.min.w??w,w);\n        this.max.w = Math.max(this.max.w??w,w);\n    }\n\n    setState (coord, state) {\n        this.cubes[this.makeId(coord)] = {state};\n        if (state) this.updateMinMax(coord.x, coord.y, coord.z, coord.w);\n    }\n\n    setNext (coord, state) {\n        this.cubes[this.makeId(coord)] = {...this.cubes[this.makeId(coord)], next: state};\n        if (state) this.updateMinMax(coord.x, coord.y, coord.z, coord.w);\n    }\n\n    \n    isActive (coord) {\n        return this.cubes[this.makeId(coord)] && this.cubes[this.makeId(coord)].state;\n    }\n\n    countActive() {\n        let count = 0;\n        for (let c in this.cubes) {\n            if (this.cubes[c] && this.cubes[c].state) count++;\n        }\n        return count;\n    }\n\n    neighbours(coord) {\n        let count = 0;\n        for (let dx=-1; dx<=1; dx++) {\n            for (let dy=-1; dy<=1; dy++) {\n                for (let dz=-1; dz<=1; dz++) {\n                    if (this.dimensions ===4) {\n                        for (let dw=-1; dw<=1; dw++) {\n                            if (dx !==0 || dy !==0 || dz !== 0 || dw !== 0) {\n                                let c = {x:coord.x+dx, y: coord.y+dy, z: coord.z+dz, w: coord.w+dw };\n                                if (this.isActive(c)) count++;\n                            }\n                        }\n                    } else {\n                        if (dx !==0 || dy !==0 || dz !== 0) {\n                            let c = {x:coord.x+dx, y: coord.y+dy, z: coord.z+dz};\n                            if (this.isActive(c)) count++;\n                        }\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    step () {\n        for (let x=this.min.x-1; x<=this.max.x+1; x++) {\n            for (let y=this.min.y-1; y<=this.max.y+1; y++) {\n                for (let z=this.min.z-1; z<=this.max.z+1; z++) {\n                    if (this.dimensions ===4) {\n                        for (let w=this.min.w-1; w<=this.max.w+1; w++) {\n                            let n = this.neighbours({x,y,z,w});\n                            this.setNext({x,y,z,w}, n===3 || (this.isActive({x,y,z,w}) && n===2)); \n                        }\n                    } else {\n                        let n = this.neighbours({x,y,z});\n                        this.setNext({x,y,z}, n===3 || (this.isActive({x,y,z}) && n===2)); \n                    }\n                }\n            }\n        }\n\n        for (let c in this.cubes) {\n            if (this.cubes[c]) this.cubes[c].state = this.cubes[c].next;\n        }\n    }\n\n    print() {\n        for (let z=this.min.z; z<=this.max.z; z++) {\n            console.log('z='+z);\n            for (let y=this.min.y; y<=this.max.y; y++) {\n                let s = '';\n                for (let x=this.min.x; x<=this.max.x; x++) {\n                    s += this.isActive({x,y,z}) ? '#':'.';\n                }\n                console.log(s);\n            }\n        }\n    }\n}\n\n\nexport default function Day17(props) {\n    const [solution1, setSolution1] = useState('Solving...');\n    const [solution2, setSolution2] = useState('Solving...');\n    \n    useEffect( () => {\n        function solve1and2(lines) {\n            console.log('Solve 1');\n            let cubes = new ConwayCubes(3);\n            for (let row in lines) {\n                let line = lines[row].split('');\n                for (let col in line) {\n                    let x = +col;\n                    let y = +row;\n                    let z = 0;\n                    cubes.setState({x, y, z}, line[col]==='#');\n                }\n            }\n            console.log('Initial')\n            cubes.print();\n\n            for (let i = 1; i<=6; i++) {\n                console.log(i + ' cycles');\n                cubes.step();\n                cubes.print();\n                console.log(cubes.countActive());\n            }\n            setSolution1(cubes.countActive());\n\n            let cubes4 = new ConwayCubes(4);\n            for (let row in lines) {\n                let line = lines[row].split('');\n                for (let col in line) {\n                    let x = +col;\n                    let y = +row;\n                    cubes4.setState({x, y, z:0 ,w:0}, line[col]==='#');\n                }\n            }\n            for (let i = 1; i<=6; i++) {\n                console.log(i + ' cycles');\n                cubes4.step();\n                // cubes4.print();\n                console.log(cubes4.countActive());\n            }\n            setSolution2(cubes4.countActive());\n\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1and2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 17</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.b57f1b68.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\n\nexport default function Day18(props) {\n    const [solution1, setSolution1] = useState('Solving...');\n    const [solution2, setSolution2] = useState('Solving...');\n\n    function operate(arg1, arg2, op) {\n        if (arg1 === undefined) return arg2;\n        switch(op) {\n            case '+':\n                return arg1 + arg2;\n            case '-':\n                return arg1 - arg2;\n            case '*':\n                return arg1 * arg2;\n            case '/':\n                return arg1 / arg2;\n            default:\n                console.log('Invalid operator', op);\n        }\n    }\n\n    useEffect( () => {\n        function solve1(lines) {\n            console.log('Solve 1');\n\n            function evaluate(tokens) {\n                let result;\n                let operator;\n                for (let i=0; i<tokens.length; i++) {\n                    let token = tokens[i][0];\n                    if (token.match(/\\d+/)) {\n                        result = operate(result, parseInt(token), operator);\n                    } else if (token.match(/[*+-/]/)) {\n                        operator = token;\n                    } else if (token ==='(') {\n                        let lparams = 1;\n                        let j = i+1\n                        while (lparams > 0) {\n                            if (tokens[j][0] === '(') lparams++;\n                            if (tokens[j][0] === ')') lparams--;\n                            j++;\n                        }\n                        result = operate(result, evaluate(tokens.slice(i+1, j-1)), operator);\n                        i=j;\n                    } else if (token && token !==' ') {\n                        console.log('Invalid token', token);\n                    }\n                }\n                return result;\n            }\n\n            let sum = 0;\n            for (let line of lines) {\n                let tokens = [...line.matchAll(/(\\d+|[()*+-/ ]?)/g)];\n                let result = evaluate(tokens);\n                sum += result;\n                console.log (line + ' = '+ result);\n            }\n            setSolution1(sum);\n        }\n\n        function solve2(lines) {\n            console.log('Solve 2');\n            function scan(tokens, i) {\n                let j = i;\n                let lparams = 0;\n                while (j < tokens.length) {\n                    if (tokens[j] === '(') lparams++;\n                    if (tokens[j] === ')') lparams--;\n                    if (lparams === 0 && tokens[j] ==='*') break;\n                    j++;\n                }\n                return j; // First * or after end of tokens\n            }\n\n            function evaluate(tokens) {\n                let result;\n                let operator;\n                for (let i=0; i<tokens.length; i++) {\n                    let token = tokens[i];\n                    if (token.match(/\\d+/)) {\n                        if (operator ==='+' || !result) result = operate(result, parseInt(token), operator);\n                        else {\n                            let j = scan(tokens, i+1);\n                            result = operate(result, evaluate(tokens.slice(i, j)), operator);\n                            i = j;\n                        }\n                    } else if (token.match(/[*+-/]/)) {\n                        operator = token;\n                    } else if (token ==='(') {\n                        let lparams = 1;\n                        let j = i+1\n                        while (lparams > 0) {\n                            if (tokens[j] === '(') lparams++;\n                            if (tokens[j] === ')') lparams--;\n                            j++;\n                        }\n\n                        let k = scan(tokens, j);\n                        if (k > j+1) {\n                            let partResult = operate( evaluate(tokens.slice(i+1, j-1)), evaluate(tokens.slice(j+1, k)), tokens[j]);\n                            result = operate ( result, partResult, operator);\n                        } else {\n                            result = operate(result, evaluate(tokens.slice(i+1, j-1)), operator);\n                        }\n                        i = k-1;\n                    } else if (token && token !==' ') {\n                        console.log('Invalid token', token);\n                    }\n                }\n                // console.log('Evalute '+ tokens.join(' ')+' = '+result);\n                return result;\n            }\n\n            let sum = 0;\n            for (let line of lines) {\n                let tokens = [...line.matchAll(/(\\d+|[()*+-/ ]?)/g)].map(x => x[0]).filter(x => x!==' ');\n                let result = evaluate(tokens);\n                sum += result;\n                console.log (line + ' = '+ result);\n            }\n            setSolution2(sum);\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1(t));\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 18</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.fffb2aa8.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\n\nexport default function Day19(props) {\n    const [solution1, setSolution1] = useState('Solving...');\n    const [solution2, setSolution2] = useState('Solving...');\n\n    \n    useEffect( () => {\n        function readRules(lines) {\n            // read rules\n            let allRules = new Map();\n            let line=0;\n            for (; line<lines.length; line++) {\n                if (!lines[line]) break;\n                let m = lines[line].match(/(\\d+): (.*)/);\n                if (!m || !m[1] || !m[2]) console.log ('No match for '+lines[line]+' ', m);\n                let ruleSets = [];\n                for (let ruleSet of m[2].split('|')) {\n                    ruleSets.push(ruleSet.trim().split(' ').map(x => isNaN(parseInt(x))?x.replaceAll('\"',''):parseInt(x)));\n                }\n                allRules.set(parseInt(m[1]), ruleSets);\n            }\n            return [allRules, line];\n        }\n        function doesMatchSequence(allRules, string, rules) {\n            // console.log('doesMatchSequence: ', string, rules);\n            let i=0;\n            for (let subrule of rules) {\n                let remaining = string.substr(i);\n                if (typeof (subrule) === 'string') {\n                    if (remaining.startsWith(subrule)) {\n                        i += subrule.length;\n                        continue;\n                    }\n                } else {\n                    let ruleOptions = allRules.get(subrule);\n                    let found;\n                    for (let r of ruleOptions) {\n                        found = doesMatchSequence(allRules, remaining, r);\n                        if (found) {\n                            i += found;\n                            break;    \n                        }\n                    }\n                    if (found) continue;\n                }\n                return 0;\n            }\n            // console.log('doesMatchSequence: ', string, rules, ' = ', i);\n            return i;\n        }\n\n        function solve1(lines) {\n            // allRules = Map(number, [rules, rules])   matches either of the 'rules' sequences\n            // rules = [ruleNo, ruleNo, ruleNo]\n            // return characters matched\n\n            console.log('Solve 1');\n            let [allRules, line] = readRules(lines);\n\n            let count = 0;\n            for (line += 1; line < lines.length; line++) {\n                let matchedChars = doesMatchSequence(allRules, lines[line], allRules.get(0)[0])\n                if (matchedChars === lines[line].length) {\n                    console.log(lines[line] + ' matches rule 0: '+allRules.get(0)[0]);\n                    count++;\n                } else {\n                    console.log(lines[line] + ' DOES NOT match rule 0 '+allRules.get(0)[0]);\n                }\n            }\n            setSolution1(count);\n        }\n\n        function solve2(lines) {\n            console.log('Solve 2');\n            let [allRules, line] = readRules(lines);\n\n            let count = 0;\n            for (line += 1; line < lines.length; line++) {\n                // Hardcoded: Rule 0 = 42+ (42 31)+ \n                let j=0;\n                let countFirst = 0;\n                while( j<lines[line].length ) {\n                    let matched = doesMatchSequence(allRules, lines[line].substr(j),[42]);\n                    if (!matched) break;\n                    console.log('Matched 42: ', lines[line].substr(j,j+matched));\n                    j+= matched;\n                    countFirst++;\n                }\n    \n                let k=j;\n                let countSecond = 0;\n                while (k<lines[line].length && countSecond<countFirst) {\n                    let matched = doesMatchSequence(allRules, lines[line].substr(k), [31] );\n                    if (!matched) break;\n                    console.log('Matched 31: ', lines[line].substr(k,k+matched));\n                    k+= matched;\n                    countSecond++;\n                }\n                if (countFirst > countSecond && countSecond > 0 && k === lines[line].length) {\n                    console.log('Line: '+line+': '+lines[line] + ' matches root rule');\n                    count++;\n                } else {\n                    console.log('Line: '+line+': '+lines[line] + ' DOES NOT match root rule');\n                }\n            }\n            setSolution2(count);\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1(t));\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 19</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.7a03863b.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n/* global BigInt */\n\n\nexport default function Day20(props) {\n    const [solution1, setSolution1] = useState('Solving...');\n    const [solution2, setSolution2] = useState('Solving...');\n\n    \n    useEffect( () => {\n                            // n e s w\n        const rotatedSigs = [ [0,1,2,3], [1,6,3,4], [6,7,4,5], [7,0,5,2],   // Rotated left\n                              [2,5,0,7], [5,4,7,6], [4,3,6,1], [3,2,1,0]];  // Flipped n/s and rotated left\n        function solve1and2(lines) {\n            // position = [ tile, tile, ..]\n            // Find for next free spot, reading order\n            function possibleTiles(position) {\n                let spotX = position.length % squareSize;\n                let spotY = position.length/squareSize|0;   // integer division \n                let result = [];\n                for (let tile of tiles) {      // Look through all tiles to find match\n                    if (position.some(x => x.tileNo === tile.tileNo )) continue;\n                    let matchingRotations = [];\n                    // Does it match east side of previous tile, with any rotation / flip ?\n                    let leftTile = position[position.length-1];\n                    let upTile = position[position.length-squareSize];\n                    for (let rot=0; rot<rotatedSigs.length; rot++) {\n                        if ((spotX === 0 ||             \n                             // East side of leftTile should match with west side of tile with rotation=rot\n                             tile.sigs[rotatedSigs[rot][3]] === leftTile.sigs[rotatedSigs[leftTile.rotation][1]]) &&\n                            (spotY === 0 ||\n                             // South side of upTile should match north side of 'tile' with rotation = rot\n                             tile.sigs[rotatedSigs[rot][0]] === upTile.sigs[rotatedSigs[upTile.rotation][2]]) ) { \n                            matchingRotations.push(rot);\n                        } \n                    }\n\n                    for (let r of matchingRotations) {\n                        result.push( {...tile, rotation:r, location: {x: spotX, y: spotY} });\n                    }\n                }\n                // console.log('From position ', position, 'the possible tiles that fit in next spot are', result );\n                return result;\n            }\n            function findMatch( position ) {\n                if (position.length === tiles.length) {\n                    return position;\n                }\n                for (let possibleNextTile of possibleTiles(position)) {\n                    let match = findMatch(position.concat(possibleNextTile));\n                    if (match) return match;\n                }\n                return null;\n            }\n\n            console.log('Solve 1');\n            let line = 0;\n            let tiles = [];\n            for (; line < lines.length; line++) {\n                let tileNo = lines[line].match(/\\w+ (\\d+):/)[1];\n                let tile = [];\n                line++;\n                while (lines[line]) {\n                    tile.push(lines[line]);\n                    line++;\n                }\n                // north east south west rev.north rev.east rev.south rev.west\n                let sigs = [tile[0], tile.map(l => l[tile[0].length-1]).join(''), \n                                 tile[tile.length-1], tile.map(l => l[0]).join('') ];\n                sigs = sigs.concat(sigs.map(x => [...x].reverse().join('')));\n                // console.log('Tile: ', tileNo, tile);\n                tiles.push({t: tile, tileNo, sigs });\n            }\n\n            let squareSize = Math.sqrt(tiles.length);\n            console.log('Tiles should form a square with side: '+squareSize);\n\n            // position = [ tile, tile, ..]\n            // tile = [row, row, row (unflipped) ], rotation: 0-7, sigs: [ 8 sigs ], neswSigs: [], tileNo: <no>\n            // find next: [ possible tiles ] = possibleTiles([tile tile])\n            let firstmatch = findMatch( [] );\n            console.log('Found match', firstmatch);\n            setSolution1(firstmatch[0].tileNo * firstmatch[squareSize-1].tileNo * \n                         firstmatch[tiles.length - squareSize].tileNo * firstmatch[tiles.length-1].tileNo);\n        \n                \n            console.log('Solve 2');\n            function getRow(tile, row, rotation) {\n                switch(rotation) {\n                    case 0:\n                        return tile[row];\n                    case 1: \n                        return tile.map(x => x[tile.length-row-1]).join('');\n                    case 2:\n                        return [...tile[tile.length-row-1]].reverse().join(''); \n                    case 3: \n                        return tile.map(x => x[row]).reverse().join('');\n                    case 4:\n                        return tile[tile.length-row-1];\n                    case 5: \n                        return tile.map(x => x[tile.length-row-1]).reverse().join('');\n                    case 6:\n                        return [...tile[row]].reverse().join('');\n                    case 7: \n                        return tile.map(x => x[row]).join('');\n                    default:\n                        return undefined; \n                }\n            } \n            \n            function getImage(solution) {\n                let result = []; \n                for (let row = 0; row < squareSize; row++ ) {\n                    for (let tilerow = 1; tilerow < 9; tilerow++ ) {\n                        let out = ''\n                        for (let col = 0; col < squareSize; col++) {\n                            let tile = solution[row*squareSize + col];\n                            out += getRow(tile.t, tilerow, tile.rotation).substr(1,8);\n                        }\n                        result.push(out);\n                        console.log(out);\n                    }\n                }\n                return result;\n            }\n            function rotate(image, rotation) {\n                let result = [];\n                for (let row = 0; row < image.length; row++ ) {\n                    result.push(getRow(image, row, rotation));\n                }\n                return result;\n            }\n            // Generate image\n            let image = getImage(firstmatch);\n            console.log(image);\n            const monster = ['                  # ',\n                             '#    ##    ##    ###', \n                             ' #  #  #  #  #  #   ']\n                             .map(x => BigInt('0b'+x.replaceAll('#', '1').replaceAll(' ','0')));\n            // For all rotations\n            for (let rot = 0; rot <8; rot++) {\n                let rotImage = rotate(image, rot)\n                               .map(x => BigInt('0b'+x.replaceAll('#', '1').replaceAll('.','0')));\n                console.log('Rotated to '+rot,rotImage);\n                // Count monsters\n                let count = 0;\n                let shiftLen = BigInt(image[0].length-20);\n                for (let line = 0; line <rotImage.length-monster.length; line++) {\n                    for (let shift=0n; shift < shiftLen; shift++) {\n                        let found = true;\n                        for (let i = 0; i<monster.length; i++) {\n                            if ( (rotImage[line+i] & (monster[i] << shift)) !==  monster[i] << shift) {\n                                found = false;\n                                break;\n                            }\n                        }\n                        if (found) {\n                            count ++;\n                            console.log('Removed monster at:')\n                            for (let i=0; i<3; i++) {\n                                rotImage[line+i] ^= monster[i] << shift;\n                                console.log(rotImage[line+i].toString(2));\n                            }\n                        }\n                    }\n                }\n                console.log('Total of '+count+' monsters at rotation '+rot);\n                if (count > 0) {\n                    let roughness = rotImage\n                                    .reduce ( (a, l) => a + l.toString(2).split('').reduce((a,c) => a + +c, 0) , 0 );\n                    setSolution2(roughness);\n                }\n                // Result = no of #:s - monsters * 15  \n\n            }\n                \n\n\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1and2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 20</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.36391c28.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\n\nexport default function Day21(props) {\n    const [solution1, setSolution1] = useState('Solving...');\n    const [solution2, setSolution2] = useState('Solving...');\n    \n    useEffect( () => {\n        function solve1and2(lines) {\n            console.log('Solve 1');\n            \n            let possibleIngredients = {};\n            let allIngredients = [];\n            for (let line of lines) {\n                let p = line.match(/([\\w ]+)\\(contains ([\\w+, ]+)/);\n                if (!p) continue;\n                allIngredients.push(...(p[1].trim().split(' ')));\n                for (let allergen of p[2].split(',').map(x => x.trim())) {\n                    if (possibleIngredients[allergen]) {\n                        let ingredients = [];\n                        for (let ingr of p[1].trim().split(' ')) {\n                            if (possibleIngredients[allergen].includes(ingr)) {\n                                ingredients.push(ingr);\n                            }\n                        }\n                        possibleIngredients[allergen] = ingredients;\n                    } else {\n                        possibleIngredients[allergen] = p[1].trim().split(' ');\n                    }\n                }\n            }\n            let allergenics = Object.entries(possibleIngredients).map(x => x[1]).flat();\n            let nonAllergenics = allIngredients.filter(x => !allergenics.includes(x));\n\n            console.log('Possible ingredients: ', possibleIngredients);\n            console.log ('All ingredients: ', allIngredients);\n            console.log ('Allergencis ', allergenics);\n            console.log('Non allergenics: ', nonAllergenics);\n            setSolution1(nonAllergenics.length);\n\n\n            let ingredientsList = Object.entries(possibleIngredients);\n\n            let removedOne = true;\n            while (removedOne) {\n                removedOne = false;\n                ingredientsList = ingredientsList.sort((a,b) => a[1].length - b[1].length);\n                for (let i = 0; i< ingredientsList.length; i++ ) {\n                    if (ingredientsList[i][1].length !== 1) {\n                        console.log('Problem detected', ingredientsList[i])\n                    } else {\n                        for (let j = i+1; j< ingredientsList.length; j++) {\n                            let indexToRemove = ingredientsList[j][1].indexOf(ingredientsList[i][1][0]);\n                            if (indexToRemove !== -1) {\n                                ingredientsList[j][1].splice(indexToRemove,1);\n                                removedOne = true;\n                            }\n                        }\n                    }\n                }\n            }\n            console.log ('Actual ingredients/allergens ', ingredientsList);\n            let answer = ingredientsList.sort( (a,b) => a[0].localeCompare(b[0])).map(x => x[1][0]).join(',');\n            console.log ('Canonical ingredients list: '+answer);\n            setSolution2(answer);\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1and2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' style={{fontSize: '1vmin'}}>\n                <div>\n                    <b>Day 21</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.de216045.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\n\nexport default function Day22(props) {\n    const [solution1, setSolution1] = useState('Solving...');\n    const [solution2, setSolution2] = useState('Solving...');\n\n    \n    useEffect( () => {\n        function readDeck(lines) {\n            let deck = [];\n            for (let line of lines) {\n                let card = parseInt(line);\n                if (card) deck.push(card);\n            }\n            return deck;\n        }\n        function play(deck1, deck2, recursive) {\n            console.log('Play', deck1, deck2);\n            let deckHistory = new Set();\n            deckHistory.addDecks = function (deck1, deck2) { \n                let decks = deck1.join(',')+':'+deck2.join(','); \n                if (deckHistory.has(decks)) return true;\n                this.add(decks);\n                return false;\n            }\n            let round = 1;\n            while (deck1.length && deck2.length) {\n                // console.log('---'+round+'---', deck1, deck2);\n                if (deckHistory.addDecks(deck1, deck2)) {\n                    console.log('Repeat scenario detected');\n                    return 1;\n                }\n                let card1 = deck1.shift();\n                let card2 = deck2.shift();\n                let winner;\n                if (recursive && deck1.length >= card1 && deck2.length >= card2) {\n                    winner = play (deck1.slice(0,card1), deck2.slice(0,card2));\n                } else {\n                    winner = card1 > card2 ? 1 : 2;\n                }\n                if (winner === 1) {\n                    deck1.push(card1, card2);\n                } else {\n                    deck2.push(card2, card1);\n                }\n                round++;\n            }\n            console.log ('---> winner: '+(deck1.length?1:2))\n            return deck1.length?1:2;\n        }\n        function score (deck) {\n            let score = 0;\n            for (let i=0; i< deck.length; i++) {\n                score += (deck.length-i)*deck[i];\n            }\n            return score;\n        }\n\n        function solve1(lines) {\n            console.log('Solve 1');\n\n            let player1Deck = readDeck(lines.slice(1,lines.indexOf('')));\n            let player2Deck = readDeck(lines.slice(lines.indexOf('')+1));\n            console.log(player1Deck, player2Deck);\n\n            play(player1Deck, player2Deck);\n            let s = score(player1Deck) + score(player2Deck);\n            console.log(s);\n            setSolution1(s);\n        }\n\n        function solve2(lines) {\n\n            console.log('Solve 2');\n\n            let player1Deck = readDeck(lines.slice(1,lines.indexOf('')));\n            let player2Deck = readDeck(lines.slice(lines.indexOf('')+1));\n            let winner = play(player1Deck, player2Deck, true);\n            let s = score(player1Deck) + score(player2Deck);\n            console.log('The winner is, no'+winner+' with score: '+s);\n            setSolution2(s);\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1(t));\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve2(t));\n\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 22</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.87b92e53.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\n\nexport default function Day23(props) {\n    const [solution1, setSolution1] = useState('Solving...');\n    const [solution2, setSolution2] = useState('Solving...');\n\n    \n    useEffect( () => {\n        function * getCups(cups, cup, num) {\n            let starting = cup;\n            let n = num;\n            do {\n                yield(cup);\n                cup = cups[cup];\n            } while(cup !== starting && (n===undefined || --n) )\n        }\n\n        function print(cups, header, cup, num) {\n            let output = header;\n            let gen = getCups(cups, cup, num);\n            let result = gen.next();\n            while (!result.done) {\n                output  += `${result.value} `;\n                result = gen.next();\n            }\n            console.log(output);\n        }\n\n        function solve1(lines) {\n            console.log('Solve 1');\n            let cupInput = lines[0].split('');\n            let cups = [];\n\n            // cups[i] pekar på nästa kopp\n            for (let i=0; i<cupInput.length; i++) {\n                cups[+cupInput[i]] = +(cupInput[i+1]??cupInput[0]);\n            }\n            let maxCup = cups.length-1;\n            let current = +cupInput[0];\n\n            print(cups, 'cups: ', current);\n\n            function move() {\n                let picked = cups[current];\n                cups[current] = cups[cups[cups[picked]]];\n                let dest = (current-1) || maxCup;\n                while (dest === picked || dest === cups[picked] || dest === cups[cups[picked]]) {\n                    dest = dest - 1 || maxCup;\n                }\n                cups[cups[cups[picked]]] = cups[dest];\n                cups[dest] = picked;\n                current = cups[current];\n           }\n           for (let i=1; i<=100; i++) {\n            //    console.log('Move '+i);\n               move();\n            }\n\n            print(cups, 'cups: ', current);\n\n            let answer = '';\n            for (let c of getCups(cups, 1)) answer+=c;\n            console.log('Answer: ', answer.substr(1));\n            setSolution1(answer.substr(1));\n        }\n\n        function solve2(lines) {\n            console.log('Solve 2');\n            let cupInput = lines[0].split('');\n            let cups = [];\n\n            // cups[i] pekar på nästa kopp\n            for (let i=0; i<cupInput.length; i++) {\n                cups[+cupInput[i]] = +(cupInput[i+1]??10);\n            }\n            for (let i=10; i<1000000; i++) {\n                cups[i]=i+1;\n            }\n            cups[1000000]=+cupInput[0];\n\n            let maxCup = cups.length-1;\n            let current = +cupInput[0];\n\n            print(cups, 'cups: ', current);\n\n            function move() {\n                let picked = cups[current];\n                cups[current] = cups[cups[cups[picked]]];\n                let dest = (current-1) || maxCup;\n                while (dest === picked || dest === cups[picked] || dest === cups[cups[picked]]) {\n                    dest = dest - 1 || maxCup;\n                }\n                cups[cups[cups[picked]]] = cups[dest];\n                cups[dest] = picked;\n                current = cups[current];\n           }\n           for (let i=1; i<=10000000; i++) {\n               if (i%1000000 === 0) console.log('Move '+i);\n               move();\n            }\n\n            print(cups, 'cups: ', current, 100);\n            print(cups, 'Cups 1 to 3: ', 1, 3);\n            setSolution2(cups[1]*cups[cups[1]]);\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1(t));\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 23</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.71100668.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\n\nexport default function Day24(props) {\n    const [solution1, setSolution1] = useState('Solving...');\n    const [solution2, setSolution2] = useState('Solving...');\n\n    \n    useEffect( () => {\n        function solve1and2(lines) {\n            console.log('Solve 1');\n\n            let tiles = {};\n            let min = {}, max = {};\n            for (let line of lines) {\n                if (!line) continue;\n                let [x,y] = [0,0];\n                for (let dir of line.matchAll(/(e|se|sw|w|nw|ne)/g)) {\n                    switch (dir[1]) {\n                        case 'e':\n                            x += 2;\n                            break;\n                        case 'se':\n                            x += 1; y -= 1;\n                            break;\n                        case 'sw':\n                            x -= 1; y-=1;\n                            break;\n                        case 'w':\n                            x -= 2;\n                            break;\n                        case 'nw':\n                            x -= 1; y += 1;\n                            break;\n                        case 'ne':\n                            x += 1; y += 1;\n                            break;\n                        default:\n                            ;\n                    }\n                }\n                let coord = x+','+y;\n                tiles[coord] = ((tiles[coord]??0) + 1)%2;\n                min = {x: Math.min(min.x??x,x), y: Math.min(min.y??y,y)};\n                max = {x: Math.max(max.x??x,x), y: Math.max(max.y??y,y)};\n                // console.log('Instr: '+line+' leads to '+coord+' with '+tileFlips[coord]+' flips');\n            }\n            let count = 0;\n            for (let flips in tiles) {\n                count += tiles[flips];\n            }\n            console.log('Initial: ', count, 'tiles are black', min, max, \n                        Object.keys(tiles).reduce( (a,c) => a + (tiles[c]?1:0),0 ));\n            setSolution1(count);\n            function getBlackNeighbors(tiles, x0,y0) {\n                let count = 0;\n                let check = 0;\n                for (let x = x0-2; x <= x0+2; x++) {\n                    for (let y = y0-1; y <= y0+1; y++) {\n                        if ( (x+y)%2 === 1 || (x+y)%2 === -1 || (x===x0 && y ===y0) ) continue;\n                        if (tiles[x+','+y]) count++;\n                        check++;\n                    }\n                }\n                if (check !== 6) console.log('Neighbors of '+x0+','+y0+' = '+count, check);\n                return count;\n            }\n\n            console.log('Solve 2');\n            for (let day = 1; day <= 100; day++) {\n                let next = {};\n                for (let x = min.x-2; x <= max.x+2; x++) {\n                    for (let y = min.y - 1; y <= max.y+1; y++) {\n                        if ( (x+y)%2 === 1 || (x+y)%2 === -1) continue;\n                        let neighbors = getBlackNeighbors(tiles,x,y);\n                        if ((tiles[x+','+y] && neighbors === 1) || neighbors === 2) {\n                            next[x+','+y] = 1;\n                            min = {x: Math.min(min.x??x,x), y: Math.min(min.y??y,y)};\n                            max = {x: Math.max(max.x??x,x), y: Math.max(max.y??y,y)};\n                        }\n                    }\n                }\n                tiles = next;\n                // console.log('Day '+day+' - Black tiles: '+Object.keys(next).reduce( (a,c) => a + next[c],0 ), next);\n            }\n            console.log('Day 100: - Black tiles: '+Object.keys(tiles).reduce( (a,c) => a + tiles[c],0 ), tiles);\n            setSolution2(Object.keys(tiles).reduce( (a,c) => a + (tiles[c]?1:0),0 ))\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1and2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 24</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.1a6bb186.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\n\nexport default function Day25(props) {\n    const [solution1, setSolution1] = useState('Solving...');\n\n    \n    useEffect( () => {\n        function solve1and2(lines) {\n            console.log('Solve 1');\n\n            let publicCard = parseInt(lines[0]);\n            let publicDoor = parseInt(lines[1]);\n            console.log('Public card: '+publicCard+' , public door: '+publicDoor);\n            let valueCard = 1;\n            let valueDoor = 1;\n            let loopCard, loopDoor;\n            for (let i=1; i< 10000000; i++) {\n                if (!loopCard) {\n                    valueCard = valueCard * 7 % 20201227;\n                    if (valueCard === publicCard) loopCard = i;\n                }\n                if (!loopDoor) {\n                    valueDoor = valueDoor * 7 % 20201227;\n                    if (valueDoor === publicDoor) loopDoor = i;\n                }\n            }\n            console.log('Card: ', loopCard, 'Door: ', loopDoor);\n            let key = 1;\n            for (let i=0; i<loopDoor; i++) key = key * publicCard % 20201227;\n            let key2 = 1;\n            for (let i=0; i<loopCard; i++) key2 = key2 * publicDoor % 20201227;\n            console.log(key, key2);\n            setSolution1(key);\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1and2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 25</b>\n                    <br/>\n                    Part 1: {solution1}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <div className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport Day1 from './day1/day1.js';\nimport Day2 from './day2/day2.js';\nimport Day3 from './day3/day3.js';\nimport Day4 from './day4/day4.js';\nimport Day5 from './day5/day5.js';\nimport Day6 from './day6/day6.js';\nimport Day7 from './day7/day7.js';\nimport Day8 from './day8/day8.js';\nimport Day9 from './day9/day9.js';\nimport Day10 from './day10/day10.js';\nimport Day11 from './day11/day11.js';\nimport Day12 from './day12/day12.js';\nimport Day13 from './day13/day13.js';\nimport Day14 from './day14/day14.js';\nimport Day15 from './day15/day15.js';\nimport Day16 from './day16/day16.js';\nimport Day17 from './day17/day17.js';\nimport Day18 from './day18/day18.js';\nimport Day19 from './day19/day19.js';\nimport Day20 from './day20/day20.js';\nimport Day21 from './day21/day21.js';\nimport Day22 from './day22/day22.js';\nimport Day23 from './day23/day23.js';\nimport Day24 from './day24/day24.js';\nimport Day25 from './day25/day25.js';\nimport './Day.css';\n\nexport default function Day(props) {\n  const states = {\n    idle: 'idle',\n    active: 'active',\n    expanded: 'expanded'\n  };\n  const [state, setState] = useState(states.idle);\n\n  var dayComponent;\n  switch (props.day) {\n    case 1:\n      dayComponent = <Day1 />;\n      break;\n    case 2:\n      dayComponent = <Day2 />;\n      break;\n    case 3:\n      dayComponent = <Day3 />;\n      break;\n    case 4:\n      dayComponent = <Day4 />;\n      break;\n    case 5:\n      dayComponent = <Day5 />;\n      break;\n    case 6:\n      dayComponent = <Day6 />;\n      break;\n    case 7:\n      dayComponent = <Day7 />;\n      break;\n    case 8:\n      dayComponent = <Day8 />;\n      break;\n    case 9:\n      dayComponent = <Day9 />;\n      break;\n    case 10:\n      dayComponent = <Day10 />;\n      break;\n    case 11:\n      dayComponent = <Day11 />;\n      break;\n    case 12:\n      dayComponent = <Day12 />;\n      break;\n    case 13:\n      dayComponent = <Day13 />;\n      break;\n    case 14:\n      dayComponent = <Day14 />;\n      break;\n    case 15:\n      dayComponent = <Day15 />;\n      break;\n    case 16:\n      dayComponent = <Day16 />;\n      break;\n    case 17:\n      dayComponent = <Day17 />;\n      break;\n    case 18:\n      dayComponent = <Day18 />;\n      break;\n    case 19:\n      dayComponent = <Day19 />;\n      break;\n    case 20:\n      dayComponent = <Day20 />;\n      break;\n    case 21:\n      dayComponent = <Day21 />;\n      break;\n    case 22:\n      dayComponent = <Day22 />;\n      break;\n    case 23:\n      dayComponent = <Day23 />;\n      break;\n    case 24:\n      dayComponent = <Day24 />;\n      break;\n    case 25:\n      dayComponent = <Day25 />;\n      break;\n    default:\n      dayComponent = <div>Not defined yet</div>\n  }\n\n  let top, left; \n  switch (state) {\n    case states.idle:\n    case states.active:\n      let position = parseInt(props.day) - 1;\n      top = Math.floor(position / 7) * 20 + 15;\n      left = (position % 7) * 12 + 8;\n      break;\n    case states.expanded:\n      top = 10;\n      left = 10;\n      break;\n    default:\n      top = 0; left=0;\n  }\n\n  switch (state) {\n    case states.idle:\n      return (\n        <div className=\"Day\" style={{ top: top + 'vh', left: left + 'vw' }} onClick={() => setState(states.active)} >\n          Day {props.day}\n          {/* <div className='door left back' key='doorleftback' />\n          <div className='door right back' key='doorrightback' /> */}\n          <div className=\"door left\" key=\"doorleft\">{props.day}</div>\n          <div className=\"door right\" key=\"doorright\">Dec</div>\n        </div>\n      );\n    case states.active:\n        return (\n        <div className=\"Day\" style={{ top: top + 'vh', left: left + 'vw' }} onClick={() => setState(states.expanded)}  >\n          <dayComponent.type state={state}/>\n          {/* <div className='door left back open' key='doorleftback' />\n          <div className='door right back open' key='doorrightback' /> */}\n          <div className=\"door left open\" key=\"doorleft\">{props.day}</div>\n          <div className=\"door right open\" key=\"doorright\">Dec</div>\n        </div>\n      );\n    case states.expanded:\n        return (\n        <div className=\"Day expanded\" style={{ top: top + 'vh', left: left + 'vw' }} >\n          <dayComponent.type state={state}/>\n          <button type=\"button\" onClick={() => setState(states.idle)}>Close</button>  \n        </div>\n      );\n    default:\n      return null;\n    }\n}\n","export default __webpack_public_path__ + \"static/media/bakgrund.80bc4e98.jpg\";","import Day from './Day.js';\nimport './App.css';\nimport background from './bakgrund.jpg';\n\nfunction App() {\n  return (\n    <div>\n      <img src={background} style={{width:'100%'}} alt=''/>\n      { Array(25).fill(0).map( (_,ix) => <Day day={ix+1} key={ix}/> ) }\n      <div style={{position: 'absolute', right: '12vw', bottom: '10vh', height: '10vh', width: '20vw'}}>\n        An AdventOfCode exercise by Anders Kökeritz\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}