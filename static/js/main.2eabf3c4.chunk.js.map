{"version":3,"sources":["day1/input.txt","day1/day1.js","day2/input.txt","day2/day2.js","day3/input.txt","day3/day3.js","day4/input.txt","day4/day4.js","day5/input.txt","day5/day5.js","day6/input.txt","day6/day6.js","Day.js","App.js","reportWebVitals.js","index.js"],"names":["Day1","props","useState","solution1","setSolution1","solution2","setSolution2","useEffect","fetch","inputData","then","r","text","t","String","split","expenses","expense1","expense2","parseInt","solve1","expense3","solve2","Day2","passwords","console","log","count","word","match","exec","min","max","letter","password","lettercount","first","second","state","Day3","sidePanel","treecount","trees","right","down","x","rowcount","length","row","treeRow","Array","Math","floor","fill","concat","from","splice","map","trim","answer","className","value","readOnly","Day4","lines","passport","line","re","fields","f","groups","filter","every","rf","find","field","m","includes","isValid","myPassport","getSeatId","l","replaceAll","seatId","seat","toString","solve1and2","Day6","groupAnswers","groupAnswersAllYes","count1","count2","firstline","answers","Set","a","forEach","add","size","Day","dayComponent","top","left","states","setState","day","position","style","onClick","type","App","_","ix","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2eabf3c4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/input.413ac430.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day1(props) {\n    function solve1(expenses) {\n        for (let expense1 of expenses) {\n            for (let expense2 of expenses) {\n                if (parseInt(expense1) + parseInt(expense2) === 2020) {\n                    setSolution1(parseInt(expense1) * parseInt(expense2));\n                    return expenses;\n                }\n            }\n        }\n        setSolution1('Not found');\n        return expenses;\n    }\n    \n    function solve2(expenses) {\n        for (let expense1 of expenses) {\n            for (let expense2 of expenses) {\n                for (let expense3 of expenses) {\n    \n                    if (parseInt(expense1) + parseInt(expense2) + parseInt(expense3) === 2020) {\n                        setSolution2(parseInt(expense1) * parseInt(expense2) * parseInt(expense3));\n                        return expenses;\n                    }\n                }\n            }\n        }\n        setSolution2('Not found');\n        return expenses;\n    }\n\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n\n    useEffect( () => {\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n')) \n        .then(t => solve1(t) )\n        .then(t => solve2(t) );\n    }, [solution1, solution2]);\n\n    return (\n        <div>\n            <b>Day1</b><br/>\n            Part 1: {solution1}\n            <br/>\n            Part 2: {solution2}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.c988762e.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day2(props) {\n    function solve1(passwords) {\n        console.log('Solve 1');\n        \n        let count = 0;\n        for (let word of passwords) {\n            let re = /(\\d+)-(\\d+) (\\w): (\\w+)/g\n            let match = re.exec(word);\n            //\n            let min = parseInt(match[1]);\n            let max = parseInt(match[2]);\n            let letter = match[3];\n            let password = match[4];\n            let lettercount = 0;\n            for (let char of password) {\n                if (char ===letter) {\n                    lettercount++;\n                }\n            }\n            if (lettercount >= min && lettercount <= max) {\n                count++;\n            } else {\n            }\n        }\n        setSolution1(count);\n        return passwords;\n    }\n    \n    function solve2(passwords) {\n        console.log('Solve 2');\n        \n        let count = 0;\n        for (let word of passwords) {\n            let re = /(\\d+)-(\\d+) (\\w): (\\w+)/g\n            let match = re.exec(word);\n            let first = parseInt(match[1]);\n            let second = parseInt(match[2]);\n            let letter = match[3];\n            let password = match[4];\n            if ( (password[first-1]===letter) !== (password[second-1]===letter)) {\n                count++;\n            }\n        }\n        setSolution2(count);\n        return passwords;\n    }\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n\n    useEffect( () => {\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n')) \n        .then(t => solve1(t) )\n        .then(t => solve2(t) );\n    }, [solution1, solution2]);\n    \n    return (\n        <div>\n            <b>Day 2</b><br/>\n            Part 1: {solution1}\n            {props.state ==='expanded' && (<><br/> </>) }\n            <br/>\n            Part 2: {solution2}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.9cf06ee3.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day3(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n    const [sidePanel, setSidePanel] = useState('');\n\n    useEffect( () => {\n        function treecount(trees, right, down) {\n            let x = 0;\n            let count = 0;\n            for (let rowcount = 0; rowcount<trees.length; rowcount+=down) {\n                let row = trees[rowcount];\n                let treeRow = Array(row.length * Math.floor(x/row.length)).fill('_').concat(Array.from(row));\n                if (row[x % row.length] === '#') {\n                    treeRow.splice(x, 1,'X');\n                    count++;\n                } else {\n                    treeRow.splice(x, 1,'O');\n                }\n                // log(rowcount, treeRow.join(''));\n                x +=right;\n            }\n            return count;\n        }\n      \n        // function log(...message) {\n        //     sidePanelText = sidePanelText.concat('\\n', ...message);\n        //     setSidePanel(sidePanelText);\n        // }\n\n        function solve1(trees) {\n            console.log('Solve 1');\n            let count = treecount(trees, 3, 1);\n            setSolution1(count);\n        }\n\n        function solve2(trees) {\n            console.log('Solve 2');\n            let answer = treecount(trees, 1, 1) * treecount(trees, 3, 1) * treecount(trees, 5, 1) *\n                treecount(trees, 7, 1) * treecount(trees, 1, 2);\n            setSolution2(answer);\n        }\n\n        let sidePanelText = '';\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1(t));\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve2(t) );\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 3</b><br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <textarea className='sidepanel' value={sidePanel} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.e8912674.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day4(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n    \n    useEffect( () => {\n        // function log(...message) {\n        //     sidePanelText = sidePanelText.concat('\\n', ...message);\n        //     setSidePanel(sidePanelText);\n        // }\n\n        function solve1(lines) {\n            console.log('Solve 1');\n            let passport = [];\n            let count = 0;\n            for(let line of lines) {\n                let re = /(?<fld>\\w+):(.+)/;\n                let fields = line.split(' ').map(f => f.match(re)?.groups[\"fld\"]).filter(f=> !!f);\n                // console.log('Line: ', line, 'Fields: ', fields);\n                if (fields && fields.length>0) {\n                    passport = passport.concat(fields);\n                } else {\n                    let myPassport = passport;\n                    let requiredFields = ['byr', 'iyr', 'eyr', 'hgt', 'hcl', 'ecl', 'pid'];\n                    if (requiredFields.every(f => myPassport.includes(f))) {\n                        count ++;\n                    }\n                    passport=[];\n                }\n            }\n            setSolution1(count);\n        }\n\n        function solve2(lines) {\n            console.log('Solve 2');\n            let passport = [];\n            let count = 0;\n            for(let line of lines) {\n                let re = /(?<fld>\\w+):(?<value>.+)/;\n                let fields = line.split(' ')\n                    .map(f => f.match(re)?.groups).filter(f=> f && f['fld']);\n                // console.log('Line: ', line, 'Fields: ', fields);\n                if (fields && fields.length>0) {\n                    passport = passport.concat(fields);\n                } else {\n                    if (isValid(passport)) {\n                        // console.log('OK');\n                        count++;\n                    } else {\n                        // console.log('Not OK');\n                    }\n                    passport=[];\n                }\n            }\n            setSolution2(count);\n\n            function isValid(passport) {\n                // console.log('Checking passport: ', passport);\n                let requiredFields = ['byr', 'iyr', 'eyr', 'hgt', 'hcl', 'ecl', 'pid'];\n                if (!requiredFields.every(rf => passport.find(f => f['fld'] && f['fld'] === rf))) {\n                    return false;\n                }\n                for (let field of passport) {\n                    let value = field['value'];\n                    switch (field['fld']) {\n                        case 'byr':\n                            if (value.length !== 4) return false;\n                            if (!parseInt(value) || parseInt(value) < 1920 || parseInt(value) > 2002) {\n                                return false;\n                            }\n                            break;\n                        case 'iyr':\n                            if (value.length !== 4) return false;\n                            if (!parseInt(value) || parseInt(value) < 2010 || parseInt(value) > 2020) {\n                                return false;\n                            }\n                            break;\n                        case 'eyr':\n                            if (value.length !== 4) return false;\n                            if (!parseInt(value) || parseInt(value) < 2020 || parseInt(value) > 2030) {\n                                return false;\n                            }\n                            break;\n                        case 'hgt':\n                            let m = value.match(/(\\d+)(in|cm)/);\n                            if (!m || !m[1] || !parseInt(m[1]) ) return false;\n                            if (m[2] === 'in' && (parseInt(m[1]) < 59 || parseInt(m[1]) > 76) ) return false; \n                            if (m[2] === 'cm' && (parseInt(m[1]) < 150 || parseInt(m[1]) > 193) ) return false; \n                            break;\n                        case 'hcl':\n                            if (!value.match(/#[0-9a-f]{6}/) ) return false;\n                            break;\n                        case 'ecl':\n                            if (value.length !== 3 || !['amb','blu','brn','gry','grn','hzl','oth'].includes(value)) return false;\n                            break;\n                        case 'pid':\n                            if (!value.match(/^[0-9]{9}$/) ) return false;\n                            break;\n                        case 'cid':\n                            break;\n                        default:\n                            console.log('Missing case', field['fld']);\n                    }\n                }\n                return true;\n            }\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1(t));\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve2(t) );\n    }, []);\n    \n        return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 4</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <textarea className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.ae01de17.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day4(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n    \n    useEffect( () => {\n        // function log(...message) {\n        //     sidePanelText = sidePanelText.concat('\\n', ...message);\n        //     setSidePanel(sidePanelText);\n        // }\n\n        function solve1and2(lines) {\n            console.log('Solve 1');\n\n            function getSeatId(l) {\n                return parseInt(l.replaceAll('B', '1').replaceAll('F', '0').replaceAll('R', 1).replaceAll('L', 0), 2);\n            }\n            let min = Math.min(...lines.map(getSeatId));\n            let max = Math.max(...lines.map(getSeatId));\n            setSolution1(max);\n            console.log('Max: ', max, 'Min', min);\n            for (let seatId = min; seatId< max; seatId++) {\n                if (!lines.map(getSeatId).includes(seatId)) {\n                    let seat = seatId.toString(2).replaceAll('1', 'B').replaceAll('0','F').replaceAll('1','R').replaceAll('0', 'L')\n                    console.log('Seat ', seatId, seat, 'is not taken');\n                    setSolution2(seatId);\n                }\n            }\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1and2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 5</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <textarea className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/input.57f71352.txt\";","import inputData from './input.txt'\nimport React, {useState, useEffect} from 'react'\n\n\nexport default function Day6(props) {\n    const [solution1, setSolution1] = useState('Unsolved');\n    const [solution2, setSolution2] = useState('Unsolved');\n    \n    useEffect( () => {\n        // function log(...message) {\n        //     sidePanelText = sidePanelText.concat('\\n', ...message);\n        //     setSidePanel(sidePanelText);\n        // }\n\n        function solve1and2(lines) {\n            console.log('Solve 1 & 2');\n            let count1 = 0, count2=0;\n            let groupAnswers; \n            let groupAnswersAllYes; \n            let firstline = true;\n\n            for (let line of lines) {\n                if (line !=='') {\n                    let answers=line.split('');\n                    if (firstline) {\n                        groupAnswers = new Set(answers);\n                        groupAnswersAllYes = new Set(answers);\n                        firstline = false;\n                    } else {\n                        // Check groupAnswersAllYes, remove any missing in answers\n                        groupAnswersAllYes = new Set([...groupAnswersAllYes].filter(a => answers.includes(a)));\n                        // Add answers to groupAnswers\n                        answers.forEach(answer => groupAnswers.add(answer));\n                    }\n                } else {\n                    console.log('Group answers:', groupAnswers, groupAnswers.size);\n                    count1 += groupAnswers.size\n                    console.log('Group yes answers:', groupAnswersAllYes, groupAnswersAllYes.size);\n                    count2 += groupAnswersAllYes.size\n                    firstline = true;\n                }\n            }   \n            setSolution1(count1);\n            setSolution2(count2);\n        }\n\n        fetch(inputData)\n        .then(r => r.text())\n        .then(t => String(t).split('\\n').map(r => r.trim())) \n        .then(t => solve1and2(t));\n    }, []);\n    \n    return (\n        <div>\n            <div className='solution' >\n                <div>\n                    <b>Day 6</b>\n                    <br/>\n                    Part 1: {solution1}\n                    <br/>\n                    Part 2: {solution2}\n                </div>\n            </div>\n            {props.state ==='expanded' && (\n                <textarea className='sidepanel' value={''} readOnly={true} />\n            )}\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport Day1 from './day1/day1.js';\nimport Day2 from './day2/day2.js';\nimport Day3 from './day3/day3.js';\nimport Day4 from './day4/day4.js';\nimport Day5 from './day5/day5.js';\nimport Day6 from './day6/day6.js';\nimport './Day.css';\n\nexport default function Day(props) {\n  const states = {\n    idle: 'idle',\n    active: 'active',\n    expanded: 'expanded'\n  };\n  const [state, setState] = useState(states.idle);\n\n  var dayComponent;\n  switch (props.day) {\n    case 1:\n      dayComponent = <Day1 />;\n      break;\n    case 2:\n      dayComponent = <Day2 />;\n      break;\n    case 3:\n      dayComponent = <Day3 />;\n      break;\n    case 4:\n      dayComponent = <Day4 />;\n      break;\n    case 5:\n      dayComponent = <Day5 />;\n      break;\n    case 6:\n      dayComponent = <Day6 />;\n      break;\n    default:\n      dayComponent = <div>Not defined yet</div>\n  }\n\n  let top, left; \n  switch (state) {\n    case states.idle:\n    case states.active:\n      let position = parseInt(props.day) - 1;\n      top = Math.floor(position / 7) * 20 + 15;\n      left = (position % 7) * 12 + 8;\n      break;\n    case states.expanded:\n      top = 10;\n      left = 10;\n      break;\n    default:\n      top = 0; left=0;\n  }\n\n  switch (state) {\n    case states.idle:\n      return (\n        <div className=\"Day\" style={{ top: top + 'vh', left: left + 'vw' }} onClick={() => setState(states.active)} >\n          Day {props.day}\n          <div className=\"door left\" key=\"doorleft\">{props.day}</div>\n          <div className=\"door right\" key=\"doorright\"/>\n        </div>\n      );\n    case states.active:\n        return (\n        <div className=\"Day\" style={{ top: top + 'vh', left: left + 'vw' }} onClick={() => setState(states.expanded)}  >\n          <dayComponent.type state={state}/>\n          <div className=\"door left open\" key=\"doorleft\"/>\n          <div className=\"door right open\" key=\"doorright\"/>\n        </div>\n      );\n    case states.expanded:\n        return (\n        <div className=\"Day expanded\" style={{ top: top + 'vh', left: left + 'vw' }}  >\n          <dayComponent.type state={state}/>\n          <button type=\"button\" onClick={() => setState(states.idle)}>Close</button>  \n        </div>\n      );\n    default:\n      return null;\n    }\n}\n","import Day from './Day.js';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div>\n      { Array(25).fill(0).map( (_,ix) => <Day day={ix+1} key={ix}/> ) }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}