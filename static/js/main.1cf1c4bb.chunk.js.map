{"version":3,"sources":["day1/input.txt","day1/day1.js","day2/input.txt","day2/day2.js","day3/input.txt","day3/day3.js","day4/input.txt","day4/day4.js","day5/input.txt","day5/day5.js","day6/input.txt","day6/day6.js","day7/input.txt","day7/day7.js","day8/input.txt","day8/day8.js","Day.js","App.js","reportWebVitals.js","index.js"],"names":["Day1","props","useState","solution1","setSolution1","solution2","setSolution2","useEffect","fetch","inputData","then","r","text","t","String","split","expenses","expense1","expense2","parseInt","solve1","expense3","solve2","Day2","passwords","console","log","count","word","match","exec","min","max","letter","password","lettercount","first","second","state","Day3","treecount","trees","right","down","x","rowcount","length","row","treeRow","Array","Math","floor","fill","concat","from","splice","map","trim","answer","className","value","readOnly","Day4","lines","passport","line","re","fields","f","groups","filter","every","rf","find","field","m","includes","isValid","myPassport","getSeatId","l","replaceAll","seatId","seat","toString","solve1and2","Day6","groupAnswers","groupAnswersAllYes","count1","count2","firstline","answers","Set","a","size","Day7","outerBagRules","InnerBagRules","rule","reOuterBag","reInnerBag","outerbagDescr","innerBagText","innerBagMatch","innerBagNum","innerBagDescr","push","descr","num","possibleBags","listOuterBags","bag","bagsFound","outerBag","countInnerBags","innerbag","Day8","runProgram","statements","execute","statement","tokens","acc","ip","executedLines","add","has","status","result","keys","lineNo","replace","Day","dayComponent","top","left","states","setState","day","position","style","onClick","type","App","_","ix","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cf1c4bb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/input.6d176210.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day1(props) {\r\n    function solve1(expenses) {\r\n        for (let expense1 of expenses) {\r\n            for (let expense2 of expenses) {\r\n                if (parseInt(expense1) + parseInt(expense2) === 2020) {\r\n                    setSolution1(parseInt(expense1) * parseInt(expense2));\r\n                    return expenses;\r\n                }\r\n            }\r\n        }\r\n        setSolution1('Not found');\r\n        return expenses;\r\n    }\r\n    \r\n    function solve2(expenses) {\r\n        for (let expense1 of expenses) {\r\n            for (let expense2 of expenses) {\r\n                for (let expense3 of expenses) {\r\n    \r\n                    if (parseInt(expense1) + parseInt(expense2) + parseInt(expense3) === 2020) {\r\n                        setSolution2(parseInt(expense1) * parseInt(expense2) * parseInt(expense3));\r\n                        return expenses;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setSolution2('Not found');\r\n        return expenses;\r\n    }\r\n\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n\r\n    useEffect( () => {\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n')) \r\n        .then(t => solve1(t) )\r\n        .then(t => solve2(t) );\r\n    }, [solution1, solution2]);\r\n\r\n    return (\r\n        <div>\r\n            <b>Day1</b><br/>\r\n            Part 1: {solution1}\r\n            <br/>\r\n            Part 2: {solution2}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.e5c3e273.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day2(props) {\r\n    function solve1(passwords) {\r\n        console.log('Solve 1');\r\n        \r\n        let count = 0;\r\n        for (let word of passwords) {\r\n            let re = /(\\d+)-(\\d+) (\\w): (\\w+)/g\r\n            let match = re.exec(word);\r\n            //\r\n            let min = parseInt(match[1]);\r\n            let max = parseInt(match[2]);\r\n            let letter = match[3];\r\n            let password = match[4];\r\n            let lettercount = 0;\r\n            for (let char of password) {\r\n                if (char ===letter) {\r\n                    lettercount++;\r\n                }\r\n            }\r\n            if (lettercount >= min && lettercount <= max) {\r\n                count++;\r\n            } else {\r\n            }\r\n        }\r\n        setSolution1(count);\r\n        return passwords;\r\n    }\r\n    \r\n    function solve2(passwords) {\r\n        console.log('Solve 2');\r\n        \r\n        let count = 0;\r\n        for (let word of passwords) {\r\n            let re = /(\\d+)-(\\d+) (\\w): (\\w+)/g\r\n            let match = re.exec(word);\r\n            let first = parseInt(match[1]);\r\n            let second = parseInt(match[2]);\r\n            let letter = match[3];\r\n            let password = match[4];\r\n            if ( (password[first-1]===letter) !== (password[second-1]===letter)) {\r\n                count++;\r\n            }\r\n        }\r\n        setSolution2(count);\r\n        return passwords;\r\n    }\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n\r\n    useEffect( () => {\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n')) \r\n        .then(t => solve1(t) )\r\n        .then(t => solve2(t) );\r\n    }, [solution1, solution2]);\r\n    \r\n    return (\r\n        <div>\r\n            <b>Day 2</b><br/>\r\n            Part 1: {solution1}\r\n            {props.state ==='expanded' && (<><br/> </>) }\r\n            <br/>\r\n            Part 2: {solution2}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.4cd3b3be.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day3(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        function treecount(trees, right, down) {\r\n            let x = 0;\r\n            let count = 0;\r\n            for (let rowcount = 0; rowcount<trees.length; rowcount+=down) {\r\n                let row = trees[rowcount];\r\n                let treeRow = Array(row.length * Math.floor(x/row.length)).fill('_').concat(Array.from(row));\r\n                if (row[x % row.length] === '#') {\r\n                    treeRow.splice(x, 1,'X');\r\n                    count++;\r\n                } else {\r\n                    treeRow.splice(x, 1,'O');\r\n                }\r\n                // log(rowcount, treeRow.join(''));\r\n                x +=right;\r\n            }\r\n            return count;\r\n        }\r\n      \r\n        function solve1(trees) {\r\n            console.log('Solve 1');\r\n            let count = treecount(trees, 3, 1);\r\n            setSolution1(count);\r\n        }\r\n\r\n        function solve2(trees) {\r\n            console.log('Solve 2');\r\n            let answer = treecount(trees, 1, 1) * treecount(trees, 3, 1) * treecount(trees, 5, 1) *\r\n                treecount(trees, 7, 1) * treecount(trees, 1, 2);\r\n            setSolution2(answer);\r\n        }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1(t));\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve2(t) );\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 3</b><br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <textarea className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.bbcb0056.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day4(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        // function log(...message) {\r\n        //     sidePanelText = sidePanelText.concat('\\n', ...message);\r\n        //     setSidePanel(sidePanelText);\r\n        // }\r\n\r\n        function solve1(lines) {\r\n            console.log('Solve 1');\r\n            let passport = [];\r\n            let count = 0;\r\n            for(let line of lines) {\r\n                let re = /(?<fld>\\w+):(.+)/;\r\n                let fields = line.split(' ').map(f => f.match(re)?.groups[\"fld\"]).filter(f=> !!f);\r\n                // console.log('Line: ', line, 'Fields: ', fields);\r\n                if (fields && fields.length>0) {\r\n                    passport = passport.concat(fields);\r\n                } else {\r\n                    let myPassport = passport;\r\n                    let requiredFields = ['byr', 'iyr', 'eyr', 'hgt', 'hcl', 'ecl', 'pid'];\r\n                    if (requiredFields.every(f => myPassport.includes(f))) {\r\n                        count ++;\r\n                    }\r\n                    passport=[];\r\n                }\r\n            }\r\n            setSolution1(count);\r\n        }\r\n\r\n        function solve2(lines) {\r\n            console.log('Solve 2');\r\n            let passport = [];\r\n            let count = 0;\r\n            for(let line of lines) {\r\n                let re = /(?<fld>\\w+):(?<value>.+)/;\r\n                let fields = line.split(' ')\r\n                    .map(f => f.match(re)?.groups).filter(f=> f && f['fld']);\r\n                // console.log('Line: ', line, 'Fields: ', fields);\r\n                if (fields && fields.length>0) {\r\n                    passport = passport.concat(fields);\r\n                } else {\r\n                    if (isValid(passport)) {\r\n                        // console.log('OK');\r\n                        count++;\r\n                    } else {\r\n                        // console.log('Not OK');\r\n                    }\r\n                    passport=[];\r\n                }\r\n            }\r\n            setSolution2(count);\r\n\r\n            function isValid(passport) {\r\n                // console.log('Checking passport: ', passport);\r\n                let requiredFields = ['byr', 'iyr', 'eyr', 'hgt', 'hcl', 'ecl', 'pid'];\r\n                if (!requiredFields.every(rf => passport.find(f => f['fld'] && f['fld'] === rf))) {\r\n                    return false;\r\n                }\r\n                for (let field of passport) {\r\n                    let value = field['value'];\r\n                    switch (field['fld']) {\r\n                        case 'byr':\r\n                            if (value.length !== 4) return false;\r\n                            if (!parseInt(value) || parseInt(value) < 1920 || parseInt(value) > 2002) {\r\n                                return false;\r\n                            }\r\n                            break;\r\n                        case 'iyr':\r\n                            if (value.length !== 4) return false;\r\n                            if (!parseInt(value) || parseInt(value) < 2010 || parseInt(value) > 2020) {\r\n                                return false;\r\n                            }\r\n                            break;\r\n                        case 'eyr':\r\n                            if (value.length !== 4) return false;\r\n                            if (!parseInt(value) || parseInt(value) < 2020 || parseInt(value) > 2030) {\r\n                                return false;\r\n                            }\r\n                            break;\r\n                        case 'hgt':\r\n                            let m = value.match(/(\\d+)(in|cm)/);\r\n                            if (!m || !m[1] || !parseInt(m[1]) ) return false;\r\n                            if (m[2] === 'in' && (parseInt(m[1]) < 59 || parseInt(m[1]) > 76) ) return false; \r\n                            if (m[2] === 'cm' && (parseInt(m[1]) < 150 || parseInt(m[1]) > 193) ) return false; \r\n                            break;\r\n                        case 'hcl':\r\n                            if (!value.match(/#[0-9a-f]{6}/) ) return false;\r\n                            break;\r\n                        case 'ecl':\r\n                            if (value.length !== 3 || !['amb','blu','brn','gry','grn','hzl','oth'].includes(value)) return false;\r\n                            break;\r\n                        case 'pid':\r\n                            if (!value.match(/^[0-9]{9}$/) ) return false;\r\n                            break;\r\n                        case 'cid':\r\n                            break;\r\n                        default:\r\n                            console.log('Missing case', field['fld']);\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1(t));\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve2(t) );\r\n    }, []);\r\n    \r\n        return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 4</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <textarea className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.cef4c770.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day4(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        // function log(...message) {\r\n        //     sidePanelText = sidePanelText.concat('\\n', ...message);\r\n        //     setSidePanel(sidePanelText);\r\n        // }\r\n\r\n        function solve1and2(lines) {\r\n            console.log('Solve 1');\r\n\r\n            function getSeatId(l) {\r\n                return parseInt(l.replaceAll('B', '1').replaceAll('F', '0').replaceAll('R', 1).replaceAll('L', 0), 2);\r\n            }\r\n            let min = Math.min(...lines.map(getSeatId));\r\n            let max = Math.max(...lines.map(getSeatId));\r\n            setSolution1(max);\r\n            console.log('Max: ', max, 'Min', min);\r\n            for (let seatId = min; seatId< max; seatId++) {\r\n                if (!lines.map(getSeatId).includes(seatId)) {\r\n                    let seat = seatId.toString(2).replaceAll('1', 'B').replaceAll('0','F').replaceAll('1','R').replaceAll('0', 'L')\r\n                    console.log('Seat ', seatId, seat, 'is not taken');\r\n                    setSolution2(seatId);\r\n                }\r\n            }\r\n        }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1and2(t));\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 5</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <textarea className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.9651e15f.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day6(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        // function log(...message) {\r\n        //     sidePanelText = sidePanelText.concat('\\n', ...message);\r\n        //     setSidePanel(sidePanelText);\r\n        // }\r\n\r\n        function solve1and2(lines) {\r\n            console.log('Solve 1 & 2');\r\n            let count1 = 0, count2=0;\r\n            let groupAnswers; \r\n            let groupAnswersAllYes; \r\n            let firstline = true;\r\n\r\n            for (let line of lines) {\r\n                if (line !=='') {\r\n                    let answers=line.split('');\r\n                    if (firstline) {\r\n                        groupAnswers = new Set(answers);\r\n                        groupAnswersAllYes = new Set(answers);\r\n                        firstline = false;\r\n                    } else {\r\n                        // Check groupAnswersAllYes, remove any missing in answers\r\n                        groupAnswersAllYes = new Set([...groupAnswersAllYes].filter(a => answers.includes(a)));\r\n                        // Add answers to groupAnswers\r\n                        groupAnswers = new Set([...groupAnswers].concat(answers));\r\n                        // answers.forEach(answer => groupAnswers.add(answer));\r\n                    }\r\n                } else {\r\n                    console.log('Group answers:', groupAnswers, groupAnswers.size);\r\n                    count1 += groupAnswers.size\r\n                    console.log('Group yes answers:', groupAnswersAllYes, groupAnswersAllYes.size);\r\n                    count2 += groupAnswersAllYes.size\r\n                    firstline = true;\r\n                }\r\n            }   \r\n            setSolution1(count1);\r\n            setSolution2(count2);\r\n        }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1and2(t));\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 6</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <textarea className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.fc61eb78.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day7(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        // function log(...message) {\r\n        //     sidePanelText = sidePanelText.concat('\\n', ...message);\r\n        //     setSidePanel(sidePanelText);\r\n        // }\r\n\r\n        function solve1and2(lines) {\r\n            console.log('Solve 1 & 2');\r\n            let outerBagRules = {};     // { bag:  [outerbag1, outerbag2]}\r\n            let InnerBagRules = {};     // bag: [{descr: innerbag1, num: <count>}]  \r\n           for (let rule of lines ) {\r\n                let reOuterBag = /(?<otherbag>\\w+ \\w+) bags contain (?<innerbags>.*)/; \r\n                let reInnerBag = /(?<num>\\d+) (?<innerbag>\\w+ \\w+)/; \r\n                let outerbagDescr = rule.match(reOuterBag).groups['otherbag'];\r\n                \r\n                for (let innerBagText of rule.match(reOuterBag).groups['innerbags']?.split(',')) {\r\n                    let innerBagMatch = innerBagText.match(reInnerBag);\r\n                    if (!innerBagMatch) {\r\n                        console.log(\"Innerbag description didn't match, skipped\", innerBagText);\r\n                        continue;\r\n                    }\r\n                    let innerBagNum = innerBagMatch.groups['num'];\r\n                    let innerBagDescr = innerBagMatch.groups['innerbag'];\r\n                    if (outerBagRules[innerBagDescr]) {\r\n                        outerBagRules[innerBagDescr].push(outerbagDescr);\r\n                    } else {\r\n                        outerBagRules[innerBagDescr] = [outerbagDescr];\r\n                    }\r\n                    if (InnerBagRules[outerbagDescr]) {\r\n                        InnerBagRules[outerbagDescr].push({descr: innerBagDescr, num: innerBagNum});\r\n                    } else {\r\n                        InnerBagRules[outerbagDescr] = [{descr: innerBagDescr, num: innerBagNum}];\r\n                    }\r\n                    \r\n                    console.log(\"RULE: \" + outerbagDescr + \" contains \" + innerBagNum, innerBagDescr);\r\n                }\r\n            }\r\n            // Until no parents: Get outer bags of \"shiny gold\"; Get outer bags of these\r\n            function listOuterBags(bag) {\r\n                let bagsFound = [bag];\r\n                for (let outerBag of outerBagRules[bag]||[]) {\r\n                    bagsFound = bagsFound.concat(listOuterBags(outerBag));\r\n                } \r\n                return bagsFound;\r\n            }\r\n            let possibleBags = listOuterBags('shiny gold');\r\n            console.log (\"Possible outer bags\", possibleBags, \"reduced to\", new Set(possibleBags))\r\n            setSolution1(new Set(possibleBags).size -1);\r\n\r\n            function countInnerBags(bag) {\r\n                let count = 1; // This bag\r\n                for (let innerbag of InnerBagRules[bag]||[]) {\r\n                    count += innerbag.num * countInnerBags(innerbag.descr);\r\n                }\r\n                return count;\r\n            }\r\n            setSolution2(countInnerBags('shiny gold')-1);\r\n        }\r\n\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1and2(t));\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 7</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <div className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/input.32a515d4.txt\";","import inputData from './input.txt'\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default function Day8(props) {\r\n    const [solution1, setSolution1] = useState('Unsolved');\r\n    const [solution2, setSolution2] = useState('Unsolved');\r\n    \r\n    useEffect( () => {\r\n        function runProgram(statements) {\r\n            function execute(statement) {\r\n                let tokens = statement.split(' ');\r\n                switch (tokens[0]) {\r\n                    case 'acc':\r\n                        acc += parseInt(tokens[1]);\r\n                        break;\r\n                    case 'jmp':\r\n                        ip += parseInt(tokens[1]);\r\n                        return;\r\n                    case 'nop':\r\n                        break;\r\n                    default: \r\n                        console.log (\"Illegal opcode\", tokens[0], \"in line\", statement);\r\n                }\r\n                ip += 1;\r\n            }\r\n\r\n            let ip = 0, acc = 0;\r\n            let executedLines = new Set();\r\n            do {\r\n                executedLines.add(ip);\r\n                execute(statements[ip]);\r\n                if (executedLines.has(ip)) {\r\n                    console.log('Infinite loop detected in line ', ip);\r\n                    return {status: 'InfiniteLoop', acc, ip };\r\n                };\r\n            } while (ip < statements.length);\r\n            return {status: 'EndOK', acc, ip };\r\n        }\r\n\r\n        function solve1and2(lines) {\r\n            console.log('Solve 1');\r\n\r\n            let result = runProgram(lines);\r\n            setSolution1(result.acc);\r\n\r\n            for (let lineNo of lines.keys()) {\r\n                let statements = [...lines];    // Copy program\r\n                if (statements[lineNo].match(/^(nop) /)) {\r\n                    statements[lineNo] = statements[lineNo].replace('nop', 'jmp');\r\n                } else if (statements[lineNo].match(/^(jmp) /)) {\r\n                    statements[lineNo] = statements[lineNo].replace('jmp', 'nop');\r\n                }\r\n                let result = runProgram(statements);\r\n                if (result.status === 'EndOK') {\r\n                    console.log('Program termnates by modiying line ', lineNo, lines[lineNo]);\r\n                    setSolution2(result.acc);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        fetch(inputData)\r\n        .then(r => r.text())\r\n        .then(t => String(t).split('\\n').map(r => r.trim())) \r\n        .then(t => solve1and2(t));\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <div className='solution' >\r\n                <div>\r\n                    <b>Day 8</b>\r\n                    <br/>\r\n                    Part 1: {solution1}\r\n                    <br/>\r\n                    Part 2: {solution2}\r\n                </div>\r\n            </div>\r\n            {props.state ==='expanded' && (\r\n                <div className='sidepanel' value={''} readOnly={true} />\r\n            )}\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport Day1 from './day1/day1.js';\r\nimport Day2 from './day2/day2.js';\r\nimport Day3 from './day3/day3.js';\r\nimport Day4 from './day4/day4.js';\r\nimport Day5 from './day5/day5.js';\r\nimport Day6 from './day6/day6.js';\r\nimport Day7 from './day7/day7.js';\r\nimport Day8 from './day8/day8.js';\r\nimport './Day.css';\r\n\r\nexport default function Day(props) {\r\n  const states = {\r\n    idle: 'idle',\r\n    active: 'active',\r\n    expanded: 'expanded'\r\n  };\r\n  const [state, setState] = useState(states.idle);\r\n\r\n  var dayComponent;\r\n  switch (props.day) {\r\n    case 1:\r\n      dayComponent = <Day1 />;\r\n      break;\r\n    case 2:\r\n      dayComponent = <Day2 />;\r\n      break;\r\n    case 3:\r\n      dayComponent = <Day3 />;\r\n      break;\r\n    case 4:\r\n      dayComponent = <Day4 />;\r\n      break;\r\n    case 5:\r\n      dayComponent = <Day5 />;\r\n      break;\r\n    case 6:\r\n      dayComponent = <Day6 />;\r\n      break;\r\n    case 7:\r\n      dayComponent = <Day7 />;\r\n      break;\r\n    case 8:\r\n      dayComponent = <Day8 />;\r\n      break;\r\n    default:\r\n      dayComponent = <div>Not defined yet</div>\r\n  }\r\n\r\n  let top, left; \r\n  switch (state) {\r\n    case states.idle:\r\n    case states.active:\r\n      let position = parseInt(props.day) - 1;\r\n      top = Math.floor(position / 7) * 20 + 15;\r\n      left = (position % 7) * 12 + 8;\r\n      break;\r\n    case states.expanded:\r\n      top = 10;\r\n      left = 10;\r\n      break;\r\n    default:\r\n      top = 0; left=0;\r\n  }\r\n\r\n  switch (state) {\r\n    case states.idle:\r\n      return (\r\n        <div className=\"Day\" style={{ top: top + 'vh', left: left + 'vw' }} onClick={() => setState(states.active)} >\r\n          Day {props.day}\r\n          <div className=\"door left\" key=\"doorleft\">{props.day}</div>\r\n          <div className=\"door right\" key=\"doorright\">Dec</div>\r\n        </div>\r\n      );\r\n    case states.active:\r\n        return (\r\n        <div className=\"Day\" style={{ top: top + 'vh', left: left + 'vw' }} onClick={() => setState(states.expanded)}  >\r\n          <dayComponent.type state={state}/>\r\n          <div className=\"door left open\" key=\"doorleft\">{props.day}</div>\r\n          <div className=\"door right open\" key=\"doorright\">Dec</div>\r\n        </div>\r\n      );\r\n    case states.expanded:\r\n        return (\r\n        <div className=\"Day expanded\" style={{ top: top + 'vh', left: left + 'vw' }} >\r\n          <dayComponent.type state={state}/>\r\n          <button type=\"button\" onClick={() => setState(states.idle)}>Close</button>  \r\n        </div>\r\n      );\r\n    default:\r\n      return null;\r\n    }\r\n}\r\n","import Day from './Day.js';\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      { Array(25).fill(0).map( (_,ix) => <Day day={ix+1} key={ix}/> ) }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}